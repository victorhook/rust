{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0","program":"/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","rayon","/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=e858a7e25b232cff","-C","extra-filename=-e858a7e25b232cff","--out-dir","/home/victor/coding/rust/dev/target/rls/debug/deps","-L","dependency=/home/victor/coding/rust/dev/target/rls/debug/deps","--extern","crossbeam_deque=/home/victor/coding/rust/dev/target/rls/debug/deps/libcrossbeam_deque-a0c42fd985836e56.rmeta","--extern","either=/home/victor/coding/rust/dev/target/rls/debug/deps/libeither-29ae750cff4b3f0e.rmeta","--extern","rayon_core=/home/victor/coding/rust/dev/target/rls/debug/deps/librayon_core-31d76040d8141293.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/victor/coding/rust/dev/target/rls/debug/deps/librayon-e858a7e25b232cff.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[13420420549133888427,18092558354966680755]},"crate_root":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src","external_crates":[{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","num":15,"id":{"name":"either","disambiguator":[12598429816783924021,3062615582022793926]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":16,"id":{"name":"crossbeam_deque","disambiguator":[11313230056506805246,2418274620207167625]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":17,"id":{"name":"crossbeam_epoch","disambiguator":[14119130885619334885,16865020104953944499]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":18,"id":{"name":"cfg_if","disambiguator":[4728401171618778434,2048048374708025283]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[2076370776685385074,1392015006316593419]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":20,"id":{"name":"lazy_static","disambiguator":[3788743271740793048,7566866788145245392]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":21,"id":{"name":"memoffset","disambiguator":[15353017902686133402,14635050893463401078]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","num":22,"id":{"name":"scopeguard","disambiguator":[18042375901256650804,17165627010885092225]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":23,"id":{"name":"rayon_core","disambiguator":[3526118247829290669,14518557546081110561]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":24,"id":{"name":"crossbeam_queue","disambiguator":[3903941611944107487,566630561945843806]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":25,"id":{"name":"num_cpus","disambiguator":[7426742894021896099,4186014473537275353]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","num":26,"id":{"name":"libc","disambiguator":[13749399046973415500,10331018367531339623]}}],"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":0,"byte_end":4621,"line_start":1,"line_end":121,"column_start":1,"column_end":41}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":170},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":26451,"byte_end":26457,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5320},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27178,"byte_end":27188,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27190,"byte_end":27204,"line_start":101,"line_end":101,"column_start":40,"column_end":54},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5329},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27271,"byte_end":27276,"line_start":106,"line_end":106,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5350},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27312,"byte_end":27318,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5360},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27373,"byte_end":27382,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27418,"byte_end":27424,"line_start":113,"line_end":113,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5378},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27468,"byte_end":27477,"line_start":115,"line_end":115,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5387},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27517,"byte_end":27524,"line_start":117,"line_end":117,"column_start":25,"column_end":32},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5396},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27562,"byte_end":27569,"line_start":119,"line_end":119,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5405},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27653,"byte_end":27657,"line_start":124,"line_end":124,"column_start":22,"column_end":26},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5417},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27659,"byte_end":27667,"line_start":124,"line_end":124,"column_start":28,"column_end":36},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5440},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27709,"byte_end":27716,"line_start":126,"line_end":126,"column_start":26,"column_end":33},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5455},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27718,"byte_end":27729,"line_start":126,"line_end":126,"column_start":35,"column_end":46},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5467},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27811,"byte_end":27815,"line_start":131,"line_end":131,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27856,"byte_end":27861,"line_start":133,"line_end":133,"column_start":26,"column_end":31},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5477},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27863,"byte_end":27868,"line_start":133,"line_end":133,"column_start":33,"column_end":38},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5486},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27901,"byte_end":27905,"line_start":135,"line_end":135,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5496},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27935,"byte_end":27938,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5517},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27979,"byte_end":27986,"line_start":139,"line_end":139,"column_start":26,"column_end":33},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5505},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27988,"byte_end":27995,"line_start":139,"line_end":139,"column_start":35,"column_end":42},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5529},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28026,"byte_end":28029,"line_start":141,"line_end":141,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5542},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28065,"byte_end":28070,"line_start":143,"line_end":143,"column_start":23,"column_end":28},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":5554},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28110,"byte_end":28118,"line_start":145,"line_end":145,"column_start":25,"column_end":33},"alias_span":null,"name":"MultiZip","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6433},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28162,"byte_end":28172,"line_start":147,"line_end":147,"column_start":27,"column_end":37},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6446},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28234,"byte_end":28252,"line_start":149,"line_end":149,"column_start":36,"column_end":54},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6458},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28298,"byte_end":28309,"line_start":151,"line_end":151,"column_start":28,"column_end":39},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6468},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28345,"byte_end":28351,"line_start":153,"line_end":153,"column_start":23,"column_end":29},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6490},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28392,"byte_end":28395,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6509},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28426,"byte_end":28432,"line_start":159,"line_end":159,"column_start":21,"column_end":27},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6499},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28434,"byte_end":28440,"line_start":159,"line_end":159,"column_start":29,"column_end":35},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6519},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28478,"byte_end":28484,"line_start":162,"line_end":162,"column_start":23,"column_end":29},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6528},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28520,"byte_end":28526,"line_start":164,"line_end":164,"column_start":23,"column_end":29},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6537},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28588,"byte_end":28595,"line_start":170,"line_end":170,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6546},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28639,"byte_end":28648,"line_start":172,"line_end":172,"column_start":27,"column_end":36},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6562},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28692,"byte_end":28701,"line_start":174,"line_end":174,"column_start":27,"column_end":36},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":3307},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28761,"byte_end":28767,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6571},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28769,"byte_end":28775,"line_start":178,"line_end":178,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":3328},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28801,"byte_end":28808,"line_start":179,"line_end":179,"column_start":24,"column_end":31},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6580},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28810,"byte_end":28817,"line_start":179,"line_end":179,"column_start":33,"column_end":40},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":3575},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28854,"byte_end":28859,"line_start":182,"line_end":182,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28861,"byte_end":28866,"line_start":182,"line_end":182,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":3617},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28900,"byte_end":28904,"line_start":184,"line_end":184,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":6590},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":28906,"byte_end":28910,"line_start":184,"line_end":184,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":146}},{"kind":"Use","ref_id":{"krate":0,"index":3927},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380198,"byte_end":380218,"line_start":5,"line_end":5,"column_start":22,"column_end":42},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":3865},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380241,"byte_end":380264,"line_start":6,"line_end":6,"column_start":22,"column_end":45},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":3635},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380287,"byte_end":380307,"line_start":7,"line_end":7,"column_start":22,"column_end":42},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":3639},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380330,"byte_end":380353,"line_start":8,"line_end":8,"column_start":22,"column_end":45},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":3650},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380376,"byte_end":380402,"line_start":9,"line_end":9,"column_start":22,"column_end":48},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380425,"byte_end":380439,"line_start":10,"line_end":10,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":3931},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380462,"byte_end":380476,"line_start":11,"line_end":11,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":3661},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380499,"byte_end":380515,"line_start":12,"line_end":12,"column_start":22,"column_end":38},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":4279},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380539,"byte_end":380552,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":4289},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380576,"byte_end":380592,"line_start":14,"line_end":14,"column_start":23,"column_end":39},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":0,"index":4553},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":380614,"byte_end":380628,"line_start":15,"line_end":15,"column_start":21,"column_end":35},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":4015}},{"kind":"Use","ref_id":{"krate":23,"index":851},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4234,"byte_end":4243,"line_start":112,"line_end":112,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":246},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4265,"byte_end":4278,"line_start":113,"line_end":113,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":527},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4300,"byte_end":4310,"line_start":114,"line_end":114,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":839},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4332,"byte_end":4352,"line_start":115,"line_end":115,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":616},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4374,"byte_end":4391,"line_start":116,"line_end":116,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":615},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4414,"byte_end":4433,"line_start":117,"line_end":117,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":566},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4435,"byte_end":4455,"line_start":117,"line_end":117,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":109},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4479,"byte_end":4483,"line_start":118,"line_end":118,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":119},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4485,"byte_end":4497,"line_start":118,"line_end":118,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":409},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4521,"byte_end":4526,"line_start":119,"line_end":119,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":395},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4528,"byte_end":4533,"line_start":119,"line_end":119,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":416},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4557,"byte_end":4567,"line_start":120,"line_end":120,"column_start":22,"column_end":32},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":398},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4569,"byte_end":4578,"line_start":120,"line_end":120,"column_start":34,"column_end":43},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":496},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4602,"byte_end":4607,"line_start":121,"line_end":121,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":503},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4609,"byte_end":4619,"line_start":121,"line_end":121,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":0,"byte_end":4621,"line_start":1,"line_end":121,"column_start":1,"column_end":41},"name":"","qualname":"::","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":20},{"krate":0,"index":55},{"krate":0,"index":146},{"krate":0,"index":3957},{"krate":0,"index":4015},{"krate":0,"index":4027},{"krate":0,"index":4050},{"krate":0,"index":4065},{"krate":0,"index":4105},{"krate":0,"index":4546},{"krate":0,"index":4778},{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4865},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4884},{"krate":0,"index":4887},{"krate":0,"index":4890},{"krate":0,"index":4893}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/private.rs","byte_start":7137,"byte_end":7150,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/private.rs","byte_start":7086,"byte_end":7125,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":55},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":71},{"krate":0,"index":81},{"krate":0,"index":90},{"krate":0,"index":103},{"krate":0,"index":115},{"krate":0,"index":124}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":4896},{"krate":0,"index":4902},{"krate":0,"index":4899},{"krate":0,"index":62},{"krate":0,"index":4912},{"krate":0,"index":4905},{"krate":0,"index":4918},{"krate":0,"index":4922},{"krate":0,"index":67},{"krate":0,"index":4926},{"krate":0,"index":4941},{"krate":0,"index":4933}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4896},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13052,"byte_end":13060,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4898}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4918},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13526,"byte_end":13530,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4921}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":4948},{"krate":0,"index":4952},{"krate":0,"index":4956},{"krate":0,"index":4963},{"krate":0,"index":4970},{"krate":0,"index":4975},{"krate":0,"index":76},{"krate":0,"index":4980},{"krate":0,"index":4988},{"krate":0,"index":4996},{"krate":0,"index":5001},{"krate":0,"index":5006},{"krate":0,"index":5014}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4948},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14360,"byte_end":14368,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4951}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4970},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14703,"byte_end":14707,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4974}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4996},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":15244,"byte_end":15251,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5000}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":5022},{"krate":0,"index":5025},{"krate":0,"index":5028},{"krate":0,"index":5034},{"krate":0,"index":5040},{"krate":0,"index":5044},{"krate":0,"index":86},{"krate":0,"index":5048},{"krate":0,"index":5055}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5022},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":15943,"byte_end":15951,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5024}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5040},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":16240,"byte_end":16244,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5043}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":90},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":5062},{"krate":0,"index":5066},{"krate":0,"index":5070},{"krate":0,"index":5078},{"krate":0,"index":5085},{"krate":0,"index":5090},{"krate":0,"index":98},{"krate":0,"index":5095},{"krate":0,"index":5104},{"krate":0,"index":5112},{"krate":0,"index":5117},{"krate":0,"index":5122},{"krate":0,"index":5131}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5062},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17097,"byte_end":17105,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5065}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5085},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17474,"byte_end":17478,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5089}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5112},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":18055,"byte_end":18062,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5116}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":103},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":5139},{"krate":0,"index":5142},{"krate":0,"index":5145},{"krate":0,"index":5152},{"krate":0,"index":5158},{"krate":0,"index":5162},{"krate":0,"index":111},{"krate":0,"index":5166},{"krate":0,"index":5174}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5139},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":18820,"byte_end":18828,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5141}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5158},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":19151,"byte_end":19155,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5161}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":5181},{"krate":0,"index":5187},{"krate":0,"index":5184},{"krate":0,"index":5190},{"krate":0,"index":5196},{"krate":0,"index":5202},{"krate":0,"index":5206},{"krate":0,"index":120},{"krate":0,"index":5210},{"krate":0,"index":5217},{"krate":0,"index":5224},{"krate":0,"index":5228},{"krate":0,"index":5232},{"krate":0,"index":5239}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5181},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20003,"byte_end":20011,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5183}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5202},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20285,"byte_end":20289,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5205}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5224},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20734,"byte_end":20741,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5227}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":124},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":5246},{"krate":0,"index":5252},{"krate":0,"index":5249},{"krate":0,"index":5255},{"krate":0,"index":5268},{"krate":0,"index":5261},{"krate":0,"index":5274},{"krate":0,"index":5278},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":5290},{"krate":0,"index":5282},{"krate":0,"index":5297},{"krate":0,"index":5301},{"krate":0,"index":140},{"krate":0,"index":5313},{"krate":0,"index":5305}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5246},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21378,"byte_end":21386,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5248}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5274},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21673,"byte_end":21677,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5277}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5297},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":22360,"byte_end":22367,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5300}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":146},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":303},{"krate":0,"index":363},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":573},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":964},{"krate":0,"index":1002},{"krate":0,"index":1088},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1362},{"krate":0,"index":1393},{"krate":0,"index":1460},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2463},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2812},{"krate":0,"index":2861},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3302},{"krate":0,"index":3368},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3632},{"krate":0,"index":3635},{"krate":0,"index":3639},{"krate":0,"index":3644},{"krate":0,"index":3650},{"krate":0,"index":3655},{"krate":0,"index":3661},{"krate":0,"index":3860},{"krate":0,"index":3865},{"krate":0,"index":3927},{"krate":0,"index":3931},{"krate":0,"index":3935}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118336,"byte_end":118350,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":178}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118431,"byte_end":118441,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"fn (self) -> IterBridge<Self>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Create a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5320},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118940,"byte_end":118950,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":5322}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5329},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124154,"byte_end":124159,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5332},{"krate":0,"index":5333}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124045,"byte_end":124118,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5350},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141410,"byte_end":141416,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":5352},{"krate":0,"index":5353}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141301,"byte_end":141374,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5360},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162837,"byte_end":162846,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5362}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162728,"byte_end":162801,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5369},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166272,"byte_end":166278,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5372},{"krate":0,"index":5373}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166170,"byte_end":166243,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5378},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169810,"byte_end":169819,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5381},{"krate":0,"index":5382}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169708,"byte_end":169781,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5387},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173509,"byte_end":173516,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":5390},{"krate":0,"index":5391}],"decl_id":null,"docs":" `FlatMap` maps each element to an iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173407,"byte_end":173480,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5396},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177560,"byte_end":177567,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5398}],"decl_id":null,"docs":" `Flatten` turns each element to an iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on\n [`ParallelIterator`].","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177451,"byte_end":177524,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5405},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178986,"byte_end":178990,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5411}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178884,"byte_end":178957,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5417},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183105,"byte_end":183113,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183003,"byte_end":183076,"line_start":202,"line_end":202,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":1088},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1098},{"krate":0,"index":1107},{"krate":0,"index":1115},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1130},{"krate":0,"index":5429},{"krate":0,"index":5432},{"krate":0,"index":5431},{"krate":0,"index":1135},{"krate":0,"index":5434},{"krate":0,"index":5438},{"krate":0,"index":5437},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1154},{"krate":0,"index":1162},{"krate":0,"index":1165}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1093},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193622,"byte_end":193638,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1095},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":193871,"byte_end":193877,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":194095,"byte_end":194103,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"fn <P> (self, producer: P) -> Self::Output","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1098},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195577,"byte_end":195585,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1099},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195722,"byte_end":195726,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1100},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195783,"byte_end":195791,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195974,"byte_end":195983,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"fn (self) -> Self::IntoIter","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":196586,"byte_end":196593,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197158,"byte_end":197165,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197353,"byte_end":197361,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"fn (self, index: usize) -> (Self, Self)","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":197628,"byte_end":197637,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1107},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198585,"byte_end":198593,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1109},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198694,"byte_end":198700,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198821,"byte_end":198828,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1111},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198934,"byte_end":198940,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199176,"byte_end":199184,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"fn (self, index: usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199370,"byte_end":199381,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"fn (self) -> Self::Folder","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199540,"byte_end":199544,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1115},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199907,"byte_end":199913,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1122}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1117},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200013,"byte_end":200019,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200088,"byte_end":200095,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"fn (self, item: Item) -> Self","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200524,"byte_end":200536,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"fn <I> (mut self, iter: I) -> Self","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":200844,"byte_end":200852,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"fn (self) -> Self::Result","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201009,"byte_end":201013,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"fn (&self) -> bool","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1123},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201443,"byte_end":201450,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":1125}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201551,"byte_end":201557,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"fn (self, left: Result, right: Result) -> Result","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1126},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201919,"byte_end":201936,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202412,"byte_end":202426,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"fn (&self) -> Self","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":202548,"byte_end":202558,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"fn (&self) -> Self::Reducer","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1130},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203035,"byte_end":203052,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1131},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203130,"byte_end":203134,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203223,"byte_end":203228,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"fn (self) -> (Self, Option<Self>)","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203411,"byte_end":203420,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"fn <F> (self, folder: F) -> F","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1141},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207239,"byte_end":207245,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"fn <I, C> (par_iter: I, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1154},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":208491,"byte_end":208515,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"fn <P, C> (len: usize, producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":210291,"byte_end":210307,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"fn <P, C> (producer: P, consumer: C) -> C::Result","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5440},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212588,"byte_end":212595,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5447},{"krate":0,"index":5448}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212486,"byte_end":212559,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5455},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216549,"byte_end":216560,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":5459},{"krate":0,"index":5460},{"krate":0,"index":5461}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216447,"byte_end":216520,"line_start":188,"line_end":188,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5467},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221794,"byte_end":221798,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5470}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221685,"byte_end":221758,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1526},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":233711,"byte_end":233716,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"fn <D, S> (data: D, splitter: S) -> Split<D, S>","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5477},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234053,"byte_end":234058,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5480},{"krate":0,"index":5481}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5486},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235732,"byte_end":235736,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5488},{"krate":0,"index":5489}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235623,"byte_end":235696,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5496},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237760,"byte_end":237763,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5499},{"krate":0,"index":5500}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237658,"byte_end":237731,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5505},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243737,"byte_end":243744,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243635,"byte_end":243708,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5517},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251804,"byte_end":251811,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251702,"byte_end":251775,"line_start":344,"line_end":344,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5529},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257988,"byte_end":257991,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5532},{"krate":0,"index":5533}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":257879,"byte_end":257952,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5542},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261977,"byte_end":261982,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":5545}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":261868,"byte_end":261941,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5554},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/multizip.rs","byte_start":265650,"byte_end":265658,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"MultiZip","qualname":"::iter::multizip::MultiZip","value":"MultiZip {  }","parent":null,"children":[{"krate":0,"index":5556}],"decl_id":null,"docs":" `MultiZip` is an iterator that zips up a tuple of parallel iterators to\n produce tuples of their items.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6433},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272685,"byte_end":272695,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":6436},{"krate":0,"index":6437}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272576,"byte_end":272649,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6446},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281695,"byte_end":281713,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":6449}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281586,"byte_end":281659,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6458},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283931,"byte_end":283942,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":6460},{"krate":0,"index":6461}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":283822,"byte_end":283895,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6468},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294160,"byte_end":294166,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":6471},{"krate":0,"index":6472}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294058,"byte_end":294131,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6490},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302868,"byte_end":302871,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":6492}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302759,"byte_end":302832,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6499},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305697,"byte_end":305703,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":6501},{"krate":0,"index":6502}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305588,"byte_end":305661,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6509},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308781,"byte_end":308787,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":6511},{"krate":0,"index":6512}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308672,"byte_end":308745,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6519},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311895,"byte_end":311901,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":6521}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311786,"byte_end":311859,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6528},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316846,"byte_end":316852,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Copied","qualname":"::iter::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":6530}],"decl_id":null,"docs":" `Copied` is an iterator that copies the elements of an underlying iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316737,"byte_end":316810,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6537},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326257,"byte_end":326264,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":6540},{"krate":0,"index":6541}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326155,"byte_end":326228,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6546},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332417,"byte_end":332426,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":6548}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332308,"byte_end":332381,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6562},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340100,"byte_end":340109,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":6564}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":339991,"byte_end":340064,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6571},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353264,"byte_end":353270,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":6573}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3307},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353822,"byte_end":353828,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"fn <T> (elt: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354225,"byte_end":354229,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"fn (self, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Take only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354489,"byte_end":354492,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<RepeatN<T>, Z::Iter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate tuples repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6580},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355761,"byte_end":355768,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":6582},{"krate":0,"index":6583}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3328},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356133,"byte_end":356140,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"fn <T> (elt: T, n: usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3373},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358977,"byte_end":358981,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3374},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":359056,"byte_end":359061,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3575},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371216,"byte_end":371221,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371374,"byte_end":371379,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3579}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3617},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373561,"byte_end":373565,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"fn <T> (item: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6590},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373717,"byte_end":373721,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6592}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3635},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29386,"byte_end":29406,"line_start":197,"line_end":197,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3636},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29475,"byte_end":29479,"line_start":199,"line_end":199,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3635},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3637},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":29594,"byte_end":29598,"line_start":202,"line_end":202,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3635},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30249,"byte_end":30262,"line_start":226,"line_end":226,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"fn (self) -> Self::Iter","parent":{"krate":0,"index":3635},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3639},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30851,"byte_end":30874,"line_start":242,"line_end":242,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3641},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":30958,"byte_end":30962,"line_start":244,"line_end":244,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3642},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31138,"byte_end":31142,"line_start":248,"line_end":248,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31632,"byte_end":31640,"line_start":265,"line_end":265,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"fn (&'data self) -> Self::Iter","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3650},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32560,"byte_end":32586,"line_start":293,"line_end":293,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3652},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32656,"byte_end":32660,"line_start":295,"line_end":295,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3650},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3653},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":32812,"byte_end":32816,"line_start":299,"line_end":299,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3650},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33130,"byte_end":33142,"line_start":312,"line_end":312,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"fn (&'data mut self) -> Self::Iter","parent":{"krate":0,"index":3650},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3661},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34119,"byte_end":34135,"line_start":341,"line_end":341,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3665},{"krate":0,"index":3668},{"krate":0,"index":3672},{"krate":0,"index":3677},{"krate":0,"index":3683},{"krate":0,"index":3690},{"krate":0,"index":3693},{"krate":0,"index":3696},{"krate":0,"index":3700},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3715},{"krate":0,"index":3717},{"krate":0,"index":3720},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3727},{"krate":0,"index":3739},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3750},{"krate":0,"index":3753},{"krate":0,"index":3758},{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3774},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3794},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3814},{"krate":0,"index":3819},{"krate":0,"index":3824},{"krate":0,"index":3829},{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3836},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3841},{"krate":0,"index":3846},{"krate":0,"index":3850},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3859}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3662},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34401,"byte_end":34405,"line_start":347,"line_end":347,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34661,"byte_end":34669,"line_start":358,"line_end":358,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"fn <OP> (self, op: OP) -> ()","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":35504,"byte_end":35517,"line_start":388,"line_end":388,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"fn <OP, T> (self, init: T, op: OP) -> ()","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":36485,"byte_end":36498,"line_start":422,"line_end":422,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"fn <OP, INIT, T> (self, init: INIT, op: OP) -> ()","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":37601,"byte_end":37613,"line_start":450,"line_end":450,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"fn <OP, R> (self, op: OP) -> R","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":38722,"byte_end":38739,"line_start":489,"line_end":489,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"fn <OP, T, R> (self, init: T, op: OP) -> R","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":39963,"byte_end":39980,"line_start":531,"line_end":531,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"fn <OP, INIT, T, R> (self, init: INIT, op: OP) -> R","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":40590,"byte_end":40595,"line_start":555,"line_end":555,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"fn (self) -> usize","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":41104,"byte_end":41107,"line_start":577,"line_end":577,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"fn <F, R> (self, map_op: F) -> Map<Self, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":42450,"byte_end":42458,"line_start":614,"line_end":614,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"fn <F, T, R> (self, init: T, map_op: F) -> MapWith<Self, T, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":43641,"byte_end":43649,"line_start":651,"line_end":651,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"fn <F, INIT, T, R> (self, init: INIT, map_op: F) -> MapInit<Self, INIT, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":44580,"byte_end":44586,"line_start":681,"line_end":681,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Clone`. See also [`copied()`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":45426,"byte_end":45432,"line_start":710,"line_end":710,"column_start":8,"column_end":14},"name":"copied","qualname":"::iter::ParallelIterator::copied","value":"fn <'a, T> (self) -> Copied<Self>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Creates an iterator which copies all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Copy`. See also [`cloned()`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":46626,"byte_end":46633,"line_start":747,"line_end":747,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"fn <OP> (self, inspect_op: OP) -> Inspect<Self, OP>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47142,"byte_end":47148,"line_start":767,"line_end":767,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"fn <F> (self, update_op: F) -> Update<Self, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":47743,"byte_end":47749,"line_start":788,"line_end":788,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"fn <P> (self, filter_op: P) -> Filter<Self, P>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":48543,"byte_end":48553,"line_start":813,"line_end":813,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"fn <P, R> (self, filter_op: P) -> FilterMap<Self, P>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49237,"byte_end":49245,"line_start":837,"line_end":837,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"fn <F, PI> (self, map_op: F) -> FlatMap<Self, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested iterators,\n producing a new iterator that flattens these back into one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":49779,"byte_end":49786,"line_start":857,"line_end":857,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" An adaptor that flattens iterable `Item`s into one large iterator","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":51471,"byte_end":51477,"line_start":894,"line_end":894,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"fn <OP, ID> (self, identity: ID, op: OP) -> Self::Item","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":52818,"byte_end":52829,"line_start":928,"line_end":928,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"fn <OP> (self, op: OP) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":55013,"byte_end":55023,"line_start":982,"line_end":982,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"fn <T, OP, ID> (self, identity: ID, op: OP) -> Self::Item","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":56650,"byte_end":56665,"line_start":1026,"line_end":1026,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"fn <T, OP> (self, op: OP) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":62443,"byte_end":62447,"line_start":1167,"line_end":1167,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"fn <T, ID, F> (self, identity: ID, fold_op: F) -> Fold<Self, ID, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":63372,"byte_end":63381,"line_start":1195,"line_end":1195,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"fn <F, T> (self, init: T, fold_op: F) -> FoldWith<Self, T, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":64513,"byte_end":64521,"line_start":1228,"line_end":1228,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"fn <T, R, ID, F> (self, identity: ID, fold_op: F) -> TryFold<Self, R, ID, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":65440,"byte_end":65453,"line_start":1255,"line_end":1255,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"fn <F, T, R> (self, init: T, fold_op: F) -> TryFoldWith<Self, R, F>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":66478,"byte_end":66481,"line_start":1288,"line_end":1288,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"fn <S> (self) -> S","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":67480,"byte_end":67487,"line_start":1321,"line_end":1321,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"fn <P> (self) -> P","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":68330,"byte_end":68333,"line_start":1351,"line_end":1351,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":69072,"byte_end":69078,"line_start":1375,"line_end":1375,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":70046,"byte_end":70056,"line_start":1406,"line_end":1406,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":71289,"byte_end":71292,"line_start":1449,"line_end":1449,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"fn (self) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":72045,"byte_end":72051,"line_start":1473,"line_end":1473,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"fn <F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73020,"byte_end":73030,"line_start":1504,"line_end":1504,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"fn <K, F> (self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":73961,"byte_end":73966,"line_start":1540,"line_end":1540,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"fn <C> (self, chain: C) -> Chain<Self, C::Iter>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":75060,"byte_end":75068,"line_start":1570,"line_end":1570,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":76107,"byte_end":76117,"line_start":1600,"line_end":1600,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":77130,"byte_end":77139,"line_start":1629,"line_end":1629,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":78218,"byte_end":78230,"line_start":1659,"line_end":1659,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"fn <P, R> (self, predicate: P) -> Option<R>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":79420,"byte_end":79434,"line_start":1693,"line_end":1693,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"fn <P, R> (self, predicate: P) -> Option<R>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3824},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80621,"byte_end":80634,"line_start":1727,"line_end":1727,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"fn <P, R> (self, predicate: P) -> Option<R>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81051,"byte_end":81055,"line_start":1741,"line_end":1741,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"fn <P> (self, predicate: P) -> Option<Self::Item>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":80903,"byte_end":81043,"line_start":1739,"line_end":1740,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":81760,"byte_end":81763,"line_start":1765,"line_end":1765,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":82391,"byte_end":82394,"line_start":1787,"line_end":1787,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"fn <P> (self, predicate: P) -> bool","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":83376,"byte_end":83386,"line_start":1821,"line_end":1821,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"fn <T> (self) -> WhileSome<Self>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":84697,"byte_end":84707,"line_start":1859,"line_end":1859,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"fn (self) -> PanicFuse<Self>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":85456,"byte_end":85463,"line_start":1882,"line_end":1882,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"fn <C> (self) -> C","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Create a fresh collection containing all the element produced\n by this parallel iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":86715,"byte_end":86720,"line_start":1923,"line_end":1923,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"fn <A, B, FromA, FromB> (self) -> (FromA, FromB)","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":87826,"byte_end":87835,"line_start":1953,"line_end":1953,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"fn <A, B, P> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":89555,"byte_end":89568,"line_start":2005,"line_end":2005,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"fn <A, B, P, L, R> (self, predicate: P) -> (A, B)","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90201,"byte_end":90212,"line_start":2028,"line_end":2028,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":90874,"byte_end":90889,"line_start":2047,"line_end":2047,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91776,"byte_end":91783,"line_start":2065,"line_end":2065,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3865},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92226,"byte_end":92249,"line_start":2084,"line_end":2084,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3884},{"krate":0,"index":3890},{"krate":0,"index":3895},{"krate":0,"index":3897},{"krate":0,"index":3899},{"krate":0,"index":3901},{"krate":0,"index":3903},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3925}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92858,"byte_end":92874,"line_start":2103,"line_end":2103,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"fn (self, target: &mut Vec<Self::Item>) -> ()","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":93684,"byte_end":93699,"line_start":2128,"line_end":2128,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"fn <A, B> (self, left: &mut Vec<A>, right: &mut Vec<B>) -> ()","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3870},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":94510,"byte_end":94513,"line_start":2155,"line_end":2155,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"fn <Z> (self, zip_op: Z) -> Zip<Self, Z::Iter>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Iterate over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":95287,"byte_end":95293,"line_start":2182,"line_end":2182,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"fn <Z> (self, zip_op: Z) -> ZipEq<Self, Z::Iter>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96139,"byte_end":96149,"line_start":2206,"line_end":2206,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"fn <I> (self, other: I) -> Interleave<Self, I::Iter>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":96766,"byte_end":96785,"line_start":2225,"line_end":2225,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"fn <I> (self, other: I) -> InterleaveShortest<Self, I::Iter>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":97965,"byte_end":97971,"line_start":2253,"line_end":2253,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"fn (self, chunk_size: usize) -> Chunks<Self>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Split an iterator up into fixed-size chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":98583,"byte_end":98586,"line_start":2272,"line_end":2272,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"fn <I> (self, other: I) -> Ordering","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":99815,"byte_end":99826,"line_start":2312,"line_end":2312,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"fn <I> (self, other: I) -> Option<Ordering>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":100605,"byte_end":100607,"line_start":2338,"line_end":2338,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101109,"byte_end":101111,"line_start":2355,"line_end":2355,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101428,"byte_end":101430,"line_start":2366,"line_end":2366,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":101769,"byte_end":101771,"line_start":2377,"line_end":2377,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102179,"byte_end":102181,"line_start":2389,"line_end":2389,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":102523,"byte_end":102525,"line_start":2400,"line_end":2400,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"fn <I> (self, other: I) -> bool","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103179,"byte_end":103188,"line_start":2425,"line_end":2425,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103591,"byte_end":103595,"line_start":2443,"line_end":2443,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":103996,"byte_end":104000,"line_start":2461,"line_end":2461,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":104714,"byte_end":104726,"line_start":2483,"line_end":2483,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":105967,"byte_end":105981,"line_start":2520,"line_end":2520,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107188,"byte_end":107201,"line_start":2557,"line_end":2557,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107689,"byte_end":107697,"line_start":2575,"line_end":2575,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"fn <P> (self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":107520,"byte_end":107681,"line_start":2571,"line_end":2574,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":108206,"byte_end":108209,"line_start":2597,"line_end":2597,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"fn (self) -> Rev<Self>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109026,"byte_end":109038,"line_start":2623,"line_end":2623,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"fn (self, min: usize) -> MinLen<Self>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3921},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":109977,"byte_end":109989,"line_start":2651,"line_end":2651,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"fn (self, max: usize) -> MaxLen<Self>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3922},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":110477,"byte_end":110480,"line_start":2669,"line_end":2669,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111180,"byte_end":111185,"line_start":2685,"line_end":2685,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"fn <C> (self, consumer: C) -> C::Result","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3925},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":111961,"byte_end":111974,"line_start":2702,"line_end":2702,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"fn <CB> (self, callback: CB) -> CB::Output","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3927},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":113124,"byte_end":113144,"line_start":2741,"line_end":2741,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":3929}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":114122,"byte_end":114135,"line_start":2760,"line_end":2760,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"fn <I> (par_iter: I) -> Self","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3931},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115034,"byte_end":115048,"line_start":2796,"line_end":2796,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":3933}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115476,"byte_end":115486,"line_start":2813,"line_end":2813,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"fn <I> (&mut self, par_iter: I) -> ()","parent":{"krate":0,"index":3931},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3936},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115858,"byte_end":115861,"line_start":2824,"line_end":2824,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":6599},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3937},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115903,"byte_end":115905,"line_start":2827,"line_end":2827,"column_start":14,"column_end":16},"name":"Ok","qualname":"::iter::private::Try::Ok","value":"type Ok;","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3938},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115920,"byte_end":115925,"line_start":2828,"line_end":2828,"column_start":14,"column_end":19},"name":"Error","qualname":"::iter::private::Try::Error","value":"type Error;","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":115938,"byte_end":115949,"line_start":2829,"line_end":2829,"column_start":12,"column_end":23},"name":"into_result","qualname":"::iter::private::Try::into_result","value":"fn (self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116001,"byte_end":116008,"line_start":2830,"line_end":2830,"column_start":12,"column_end":19},"name":"from_ok","qualname":"::iter::private::Try::from_ok","value":"fn (v: Self::Ok) -> Self","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116042,"byte_end":116052,"line_start":2831,"line_end":2831,"column_start":12,"column_end":22},"name":"from_error","qualname":"::iter::private::Try::from_error","value":"fn (v: Self::Error) -> Self","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3957},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","parent":null,"children":[{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":6602},{"krate":0,"index":6608},{"krate":0,"index":6605},{"krate":0,"index":3963},{"krate":0,"index":3968},{"krate":0,"index":3974},{"krate":0,"index":6611},{"krate":0,"index":6615},{"krate":0,"index":3981},{"krate":0,"index":3985},{"krate":0,"index":6627},{"krate":0,"index":6619},{"krate":0,"index":6634},{"krate":0,"index":6638},{"krate":0,"index":3991},{"krate":0,"index":6650},{"krate":0,"index":6642},{"krate":0,"index":3997},{"krate":0,"index":4000},{"krate":0,"index":4006}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6602},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375380,"byte_end":375388,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6604}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6611},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377030,"byte_end":377034,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6614}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6634},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":378068,"byte_end":378075,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6637}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4015},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4027},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","parent":null,"children":[{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":6657},{"krate":0,"index":6663},{"krate":0,"index":6660},{"krate":0,"index":4032},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4049},{"krate":0,"index":6666},{"krate":0,"index":6671},{"krate":0,"index":6677},{"krate":0,"index":6682},{"krate":0,"index":6687},{"krate":0,"index":6693},{"krate":0,"index":6698},{"krate":0,"index":6703},{"krate":0,"index":6709},{"krate":0,"index":6714},{"krate":0,"index":6719},{"krate":0,"index":6725},{"krate":0,"index":6730},{"krate":0,"index":6735},{"krate":0,"index":6741},{"krate":0,"index":6746},{"krate":0,"index":6751},{"krate":0,"index":6757},{"krate":0,"index":6762},{"krate":0,"index":6767},{"krate":0,"index":6773},{"krate":0,"index":6778},{"krate":0,"index":6783},{"krate":0,"index":6789},{"krate":0,"index":6794},{"krate":0,"index":6796},{"krate":0,"index":6804},{"krate":0,"index":6809},{"krate":0,"index":6811},{"krate":0,"index":6819},{"krate":0,"index":6824},{"krate":0,"index":6826},{"krate":0,"index":6834},{"krate":0,"index":6839},{"krate":0,"index":6841},{"krate":0,"index":6849}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6657},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":381977,"byte_end":381981,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6659}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4050},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":6854},{"krate":0,"index":6860},{"krate":0,"index":6857},{"krate":0,"index":4054},{"krate":0,"index":4057},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4064},{"krate":0,"index":6869},{"krate":0,"index":6863},{"krate":0,"index":6880},{"krate":0,"index":6874},{"krate":0,"index":6891},{"krate":0,"index":6885},{"krate":0,"index":6902},{"krate":0,"index":6896},{"krate":0,"index":6907},{"krate":0,"index":6912},{"krate":0,"index":6917},{"krate":0,"index":6922},{"krate":0,"index":6927},{"krate":0,"index":6932},{"krate":0,"index":6937},{"krate":0,"index":6942}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6854},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390758,"byte_end":390762,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6856}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4065},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":6947},{"krate":0,"index":6953},{"krate":0,"index":6950},{"krate":0,"index":4070},{"krate":0,"index":6963},{"krate":0,"index":6956},{"krate":0,"index":6969},{"krate":0,"index":6973},{"krate":0,"index":4076},{"krate":0,"index":4080},{"krate":0,"index":6985},{"krate":0,"index":6977},{"krate":0,"index":6992},{"krate":0,"index":6996},{"krate":0,"index":4087},{"krate":0,"index":7008},{"krate":0,"index":7000},{"krate":0,"index":4094}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6947},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395749,"byte_end":395757,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6949}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6969},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396199,"byte_end":396203,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6972}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6992},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396825,"byte_end":396832,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6995}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4105},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4187},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4311},{"krate":0,"index":4314},{"krate":0,"index":4320},{"krate":0,"index":4326},{"krate":0,"index":4332},{"krate":0,"index":7035},{"krate":0,"index":7039},{"krate":0,"index":4338},{"krate":0,"index":4342},{"krate":0,"index":4349},{"krate":0,"index":4357},{"krate":0,"index":4361},{"krate":0,"index":7043},{"krate":0,"index":7048},{"krate":0,"index":4368},{"krate":0,"index":4372},{"krate":0,"index":4379},{"krate":0,"index":4387},{"krate":0,"index":4392},{"krate":0,"index":7052},{"krate":0,"index":7057},{"krate":0,"index":4399},{"krate":0,"index":4403},{"krate":0,"index":4410},{"krate":0,"index":4418},{"krate":0,"index":4423},{"krate":0,"index":7061},{"krate":0,"index":7065},{"krate":0,"index":4430},{"krate":0,"index":4437},{"krate":0,"index":4445},{"krate":0,"index":4449},{"krate":0,"index":7069},{"krate":0,"index":7074},{"krate":0,"index":4456},{"krate":0,"index":4463},{"krate":0,"index":4471},{"krate":0,"index":4476},{"krate":0,"index":4483},{"krate":0,"index":4489},{"krate":0,"index":4494},{"krate":0,"index":4499},{"krate":0,"index":4506},{"krate":0,"index":4517},{"krate":0,"index":4523},{"krate":0,"index":4528},{"krate":0,"index":4535}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4279},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399331,"byte_end":399344,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4284},{"krate":0,"index":4285}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4281},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399463,"byte_end":399480,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"fn (&self) -> &[T]","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":399913,"byte_end":399922,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"fn <P> (&self, separator: P) -> Split<'_, T, P>","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4284},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":400456,"byte_end":400467,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"fn (&self, window_size: usize) -> Windows<'_, T>","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401180,"byte_end":401190,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"fn (&self, chunk_size: usize) -> Chunks<'_, T>","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4289},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401579,"byte_end":401595,"line_start":101,"line_end":101,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4299},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4307}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":401722,"byte_end":401743,"line_start":104,"line_end":104,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"fn (&mut self) -> &mut [T]","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4292},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":402192,"byte_end":402205,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"fn <P> (&mut self, separator: P) -> SplitMut<'_, T, P>","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4294},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":403031,"byte_end":403045,"line_start":144,"line_end":144,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"fn (&mut self, chunk_size: usize) -> ChunksMut<'_, T>","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":404734,"byte_end":404742,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":406468,"byte_end":406479,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":408215,"byte_end":408230,"line_start":270,"line_end":270,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4303},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":409675,"byte_end":409692,"line_start":309,"line_end":309,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4304},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":411243,"byte_end":411263,"line_start":351,"line_end":351,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4307},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":412807,"byte_end":412831,"line_start":392,"line_end":392,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"fn <B, F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7035},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414081,"byte_end":414085,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7038}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7043},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415595,"byte_end":415601,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":7046},{"krate":0,"index":7047}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7052},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417554,"byte_end":417561,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":7055},{"krate":0,"index":7056}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7061},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":419598,"byte_end":419605,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":7064}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7069},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421084,"byte_end":421093,"line_start":735,"line_end":735,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":7072},{"krate":0,"index":7073}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4483},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":422952,"byte_end":422957,"line_start":808,"line_end":808,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4487},{"krate":0,"index":4488}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4517},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":424826,"byte_end":424834,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":4521},{"krate":0,"index":4522}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4546},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","parent":null,"children":[{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4591},{"krate":0,"index":4604},{"krate":0,"index":7081},{"krate":0,"index":7087},{"krate":0,"index":7084},{"krate":0,"index":4618},{"krate":0,"index":4621},{"krate":0,"index":4626},{"krate":0,"index":7090},{"krate":0,"index":7096},{"krate":0,"index":7093},{"krate":0,"index":4632},{"krate":0,"index":4636},{"krate":0,"index":4641},{"krate":0,"index":7099},{"krate":0,"index":7105},{"krate":0,"index":7102},{"krate":0,"index":4647},{"krate":0,"index":4650},{"krate":0,"index":4655},{"krate":0,"index":7108},{"krate":0,"index":7114},{"krate":0,"index":7111},{"krate":0,"index":4661},{"krate":0,"index":4664},{"krate":0,"index":4669},{"krate":0,"index":7117},{"krate":0,"index":7126},{"krate":0,"index":7122},{"krate":0,"index":4675},{"krate":0,"index":4679},{"krate":0,"index":4685},{"krate":0,"index":7130},{"krate":0,"index":7139},{"krate":0,"index":7135},{"krate":0,"index":4695},{"krate":0,"index":4701},{"krate":0,"index":4705},{"krate":0,"index":4710},{"krate":0,"index":4716},{"krate":0,"index":7143},{"krate":0,"index":7150},{"krate":0,"index":7147},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":7153},{"krate":0,"index":7160},{"krate":0,"index":7157},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":7163},{"krate":0,"index":7172},{"krate":0,"index":7168},{"krate":0,"index":4737},{"krate":0,"index":4743},{"krate":0,"index":4749},{"krate":0,"index":7176},{"krate":0,"index":7185},{"krate":0,"index":7181},{"krate":0,"index":4757},{"krate":0,"index":4764},{"krate":0,"index":4770}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4553},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488249,"byte_end":488263,"line_start":59,"line_end":59,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4564},{"krate":0,"index":4565},{"krate":0,"index":4567}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4554},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488380,"byte_end":488398,"line_start":62,"line_end":62,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"fn (&self) -> &str","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":488683,"byte_end":488692,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"fn (&self) -> Chars<'_>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4556},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489101,"byte_end":489117,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"fn (&self) -> CharIndices<'_>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4557},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":489777,"byte_end":489786,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"fn (&self) -> Bytes<'_>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":490507,"byte_end":490523,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"fn (&self) -> EncodeUtf16<'_>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4559},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":491211,"byte_end":491220,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"fn <P> (&self, separator: P) -> Split<'_, P>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4561},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492049,"byte_end":492069,"line_start":175,"line_end":175,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"fn <P> (&self, terminator: P) -> SplitTerminator<'_, P>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4563},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":492740,"byte_end":492749,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"fn (&self) -> Lines<'_>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":493374,"byte_end":493394,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"fn (&self) -> SplitWhitespace<'_>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494071,"byte_end":494082,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"fn <P> (&self, pattern: P) -> Matches<'_, P>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":494860,"byte_end":494877,"line_start":255,"line_end":255,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"fn <P> (&self, pattern: P) -> MatchIndices<'_, P>","parent":{"krate":0,"index":4553},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4573},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495774,"byte_end":495781,"line_start":283,"line_end":283,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":7078},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4580},{"krate":0,"index":4583}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495841,"byte_end":495848,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"fn (&self, haystack: &str) -> Option<usize>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495901,"byte_end":495909,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"fn (&self, haystack: &str) -> Option<usize>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4576},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495962,"byte_end":495974,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"fn (&self, haystack: &str) -> bool","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":496018,"byte_end":496029,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"fn <'ch, F> (&self, haystack: &'ch str, folder: F, skip_last: bool) -> F","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":496156,"byte_end":496168,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"fn <'ch, F> (&self, haystack: &'ch str, folder: F) -> F","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4583},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":496278,"byte_end":496296,"line_start":294,"line_end":294,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"fn <'ch, F> (&self, haystack: &'ch str, folder: F, base: usize) -> F","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7081},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":498767,"byte_end":498772,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":7083}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7090},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499814,"byte_end":499825,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":7092}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501197,"byte_end":501202,"line_start":495,"line_end":495,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":7101}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7108},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502218,"byte_end":502229,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":7110}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7117},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503297,"byte_end":503302,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7120},{"krate":0,"index":7121}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7130},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":504971,"byte_end":504986,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":7133},{"krate":0,"index":7134}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7143},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":506844,"byte_end":506849,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7153},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507520,"byte_end":507535,"line_start":739,"line_end":739,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7163},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508124,"byte_end":508131,"line_start":764,"line_end":764,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":7166},{"krate":0,"index":7167}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7176},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":509532,"byte_end":509544,"line_start":820,"line_end":820,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":7179},{"krate":0,"index":7180}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4778},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":7189},{"krate":0,"index":7195},{"krate":0,"index":7192},{"krate":0,"index":4781},{"krate":0,"index":4786},{"krate":0,"index":4792},{"krate":0,"index":4799},{"krate":0,"index":4803},{"krate":0,"index":4810},{"krate":0,"index":4814},{"krate":0,"index":4818},{"krate":0,"index":4824},{"krate":0,"index":4828},{"krate":0,"index":4832}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7189},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511306,"byte_end":511314,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":7191}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":8527,"byte_end":8540,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":10008,"byte_end":10021,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13155,"byte_end":13165,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13622,"byte_end":13626,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14826,"byte_end":14830,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":16341,"byte_end":16345,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17609,"byte_end":17613,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":19259,"byte_end":19263,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20369,"byte_end":20373,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21782,"byte_end":21786,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118516,"byte_end":118517,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":119027,"byte_end":119037,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120035,"byte_end":120055,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120347,"byte_end":120367,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124274,"byte_end":124279,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124507,"byte_end":124512,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":125615,"byte_end":125620,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":126555,"byte_end":126564,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127242,"byte_end":127251,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127920,"byte_end":127933,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":128116,"byte_end":128129,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129741,"byte_end":129749,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129963,"byte_end":129971,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130267,"byte_end":130275,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130396,"byte_end":130404,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131024,"byte_end":131036,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131190,"byte_end":131202,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131787,"byte_end":131799,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":132159,"byte_end":132169,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":133196,"byte_end":133207,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":135729,"byte_end":135741,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":136291,"byte_end":136303,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":137369,"byte_end":137381,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":138939,"byte_end":138949,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":140657,"byte_end":140668,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141498,"byte_end":141504,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141703,"byte_end":141709,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142042,"byte_end":142048,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142746,"byte_end":142754,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":143327,"byte_end":143340,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":144459,"byte_end":144467,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145145,"byte_end":145153,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145314,"byte_end":145322,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152028,"byte_end":152043,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152336,"byte_end":152351,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":153378,"byte_end":153391,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":154402,"byte_end":154417,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":148290,"byte_end":148297,"line_start":76,"line_end":76,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":149963,"byte_end":149966,"line_start":121,"line_end":121,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162901,"byte_end":162910,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163103,"byte_end":163112,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163456,"byte_end":163465,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163971,"byte_end":163979,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":164563,"byte_end":164580,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166386,"byte_end":166392,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166552,"byte_end":166558,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166769,"byte_end":166775,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167319,"byte_end":167333,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167484,"byte_end":167498,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168242,"byte_end":168256,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168639,"byte_end":168651,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169927,"byte_end":169936,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170143,"byte_end":170152,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170341,"byte_end":170350,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170913,"byte_end":170930,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171083,"byte_end":171100,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171886,"byte_end":171903,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":172304,"byte_end":172319,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173621,"byte_end":173628,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173807,"byte_end":173814,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173994,"byte_end":174001,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174612,"byte_end":174627,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174772,"byte_end":174787,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":175579,"byte_end":175594,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":176034,"byte_end":176047,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177619,"byte_end":177626,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177860,"byte_end":177867,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178303,"byte_end":178307,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179104,"byte_end":179108,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179298,"byte_end":179302,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179911,"byte_end":179923,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":180779,"byte_end":180791,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":181260,"byte_end":181270,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182430,"byte_end":182438,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183227,"byte_end":183235,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183489,"byte_end":183497,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184065,"byte_end":184081,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184999,"byte_end":185015,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":185744,"byte_end":185759,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186155,"byte_end":186170,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186594,"byte_end":186609,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187492,"byte_end":187495,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187764,"byte_end":187772,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188128,"byte_end":188138,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188447,"byte_end":188457,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188920,"byte_end":188927,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189461,"byte_end":189469,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189768,"byte_end":189775,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190097,"byte_end":190105,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190383,"byte_end":190389,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190650,"byte_end":190656,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190923,"byte_end":190929,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191192,"byte_end":191198,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191468,"byte_end":191474,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191917,"byte_end":191920,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":204054,"byte_end":204062,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":205191,"byte_end":205205,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207563,"byte_end":207571,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":211834,"byte_end":211841,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212743,"byte_end":212750,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212946,"byte_end":212953,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":213649,"byte_end":213664,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":214555,"byte_end":214570,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215088,"byte_end":215101,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215829,"byte_end":215840,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216681,"byte_end":216692,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216973,"byte_end":216984,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":217594,"byte_end":217613,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":218576,"byte_end":218595,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219484,"byte_end":219498,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219540,"byte_end":219554,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219656,"byte_end":219670,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220197,"byte_end":220211,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220460,"byte_end":220474,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220715,"byte_end":220727,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221842,"byte_end":221846,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222078,"byte_end":222082,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222417,"byte_end":222421,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":223002,"byte_end":223010,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224148,"byte_end":224165,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224207,"byte_end":224224,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224326,"byte_end":224343,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224957,"byte_end":224974,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225241,"byte_end":225258,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225734,"byte_end":225749,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227089,"byte_end":227110,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227144,"byte_end":227165,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227259,"byte_end":227280,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227859,"byte_end":227880,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228117,"byte_end":228138,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228793,"byte_end":228812,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234128,"byte_end":234133,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234313,"byte_end":234318,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234806,"byte_end":234819,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235780,"byte_end":235784,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236016,"byte_end":236020,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236355,"byte_end":236359,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236922,"byte_end":236930,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237868,"byte_end":237871,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238028,"byte_end":238031,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238233,"byte_end":238236,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238710,"byte_end":238713,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":239455,"byte_end":239463,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":240142,"byte_end":240153,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241325,"byte_end":241336,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241477,"byte_end":241488,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242227,"byte_end":242238,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242629,"byte_end":242638,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243875,"byte_end":243882,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244114,"byte_end":244121,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244352,"byte_end":244359,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244875,"byte_end":244882,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":245727,"byte_end":245735,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":246518,"byte_end":246533,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":247866,"byte_end":247877,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248258,"byte_end":248269,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248560,"byte_end":248571,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248885,"byte_end":248900,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249066,"byte_end":249081,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249925,"byte_end":249940,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":250400,"byte_end":250413,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1868},{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251944,"byte_end":251951,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252124,"byte_end":252131,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252374,"byte_end":252381,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252921,"byte_end":252928,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":253803,"byte_end":253811,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1915},{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":254621,"byte_end":254636,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256086,"byte_end":256101,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256283,"byte_end":256298,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":257154,"byte_end":257169,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258084,"byte_end":258087,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258309,"byte_end":258312,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258696,"byte_end":258699,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259359,"byte_end":259368,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259989,"byte_end":259998,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":260655,"byte_end":260666,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262075,"byte_end":262080,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262349,"byte_end":262354,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262746,"byte_end":262751,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272824,"byte_end":272834,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273085,"byte_end":273095,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273472,"byte_end":273482,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":274378,"byte_end":274387,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275197,"byte_end":275206,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275987,"byte_end":276005,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":276325,"byte_end":276343,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":279208,"byte_end":279221,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280354,"byte_end":280367,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280928,"byte_end":280941,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281868,"byte_end":281886,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282527,"byte_end":282545,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282922,"byte_end":282940,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284042,"byte_end":284053,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284283,"byte_end":284294,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284824,"byte_end":284835,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":285742,"byte_end":285750,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286317,"byte_end":286336,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286577,"byte_end":286596,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":288771,"byte_end":288786,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":289558,"byte_end":289573,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290221,"byte_end":290236,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290584,"byte_end":290603,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290828,"byte_end":290847,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":291925,"byte_end":291944,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":292484,"byte_end":292501,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294274,"byte_end":294280,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294440,"byte_end":294446,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294657,"byte_end":294663,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295125,"byte_end":295131,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295872,"byte_end":295880,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":296557,"byte_end":296571,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297831,"byte_end":297845,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297992,"byte_end":298006,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":298752,"byte_end":298766,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":299287,"byte_end":299299,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":300245,"byte_end":300254,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301004,"byte_end":301013,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301117,"byte_end":301126,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301431,"byte_end":301443,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301787,"byte_end":301799,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302155,"byte_end":302167,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302361,"byte_end":302372,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302926,"byte_end":302929,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303110,"byte_end":303113,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303448,"byte_end":303451,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304021,"byte_end":304029,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304544,"byte_end":304555,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305774,"byte_end":305780,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305984,"byte_end":305990,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306325,"byte_end":306331,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306909,"byte_end":306917,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":307552,"byte_end":307566,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308858,"byte_end":308864,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309068,"byte_end":309074,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309409,"byte_end":309415,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309993,"byte_end":310001,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":310636,"byte_end":310650,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311949,"byte_end":311955,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312142,"byte_end":312148,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312596,"byte_end":312602,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313247,"byte_end":313255,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313812,"byte_end":313826,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314722,"byte_end":314736,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314848,"byte_end":314862,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315510,"byte_end":315524,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315844,"byte_end":315856,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316900,"byte_end":316906,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317093,"byte_end":317099,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317546,"byte_end":317552,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2699},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318196,"byte_end":318204,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2709},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318760,"byte_end":318774,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319743,"byte_end":319757,"line_start":143,"line_end":143,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319869,"byte_end":319883,"line_start":149,"line_end":149,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320530,"byte_end":320544,"line_start":178,"line_end":178,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320863,"byte_end":320875,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":321980,"byte_end":321995,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322017,"byte_end":322032,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322181,"byte_end":322196,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322746,"byte_end":322761,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2795},{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322993,"byte_end":323008,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":323193,"byte_end":323206,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2811}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324194,"byte_end":324205,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324227,"byte_end":324238,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324379,"byte_end":324390,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324857,"byte_end":324868,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325084,"byte_end":325095,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325268,"byte_end":325277,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326373,"byte_end":326380,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326541,"byte_end":326548,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326763,"byte_end":326770,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327230,"byte_end":327237,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2888},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327979,"byte_end":327987,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":328658,"byte_end":328673,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":329883,"byte_end":329898,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330048,"byte_end":330063,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330806,"byte_end":330821,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2948},{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":331200,"byte_end":331213,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2965},{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332601,"byte_end":332605,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2977}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332763,"byte_end":332767,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332877,"byte_end":332886,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333080,"byte_end":333089,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333599,"byte_end":333608,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2992},{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":334308,"byte_end":334316,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3003},{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":335025,"byte_end":335042,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336140,"byte_end":336153,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336500,"byte_end":336513,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336764,"byte_end":336777,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":337088,"byte_end":337105,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338063,"byte_end":338080,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338559,"byte_end":338574,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3080},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":339423,"byte_end":339439,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340157,"byte_end":340166,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340355,"byte_end":340364,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340994,"byte_end":341011,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":341811,"byte_end":341828,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":342231,"byte_end":342246,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3146},{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345066,"byte_end":345076,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345373,"byte_end":345383,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345695,"byte_end":345703,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3200}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346038,"byte_end":346046,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346382,"byte_end":346390,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346684,"byte_end":346692,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3215}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347162,"byte_end":347169,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347624,"byte_end":347631,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348158,"byte_end":348165,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348497,"byte_end":348504,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348956,"byte_end":348966,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349406,"byte_end":349416,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349820,"byte_end":349826,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350481,"byte_end":350487,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350954,"byte_end":350960,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351221,"byte_end":351227,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351503,"byte_end":351509,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3280}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351880,"byte_end":351888,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352174,"byte_end":352182,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352594,"byte_end":352597,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353908,"byte_end":353914,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3311},{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354763,"byte_end":354769,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355219,"byte_end":355233,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356284,"byte_end":356291,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356609,"byte_end":356616,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3338},{"krate":0,"index":3340},{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":357228,"byte_end":357243,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358040,"byte_end":358044,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358422,"byte_end":358426,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358555,"byte_end":358559,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":361581,"byte_end":361586,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":362467,"byte_end":362476,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":363513,"byte_end":363525,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":364156,"byte_end":364162,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":365563,"byte_end":365569,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":366506,"byte_end":366519,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":367782,"byte_end":367795,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":368459,"byte_end":368470,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":369211,"byte_end":369223,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":370307,"byte_end":370315,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371446,"byte_end":371451,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371541,"byte_end":371546,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371682,"byte_end":371687,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3591}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371973,"byte_end":371978,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":372458,"byte_end":372471,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373784,"byte_end":373788,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":374074,"byte_end":374078,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":3629},{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31738,"byte_end":31739,"line_start":268,"line_end":268,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33247,"byte_end":33248,"line_start":315,"line_end":315,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91883,"byte_end":91884,"line_start":2070,"line_end":2070,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116105,"byte_end":116111,"line_start":2834,"line_end":2834,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6600},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116436,"byte_end":116442,"line_start":2851,"line_end":2851,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6601},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375462,"byte_end":375468,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375641,"byte_end":375649,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375944,"byte_end":375952,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3976},{"krate":0,"index":3978},{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377109,"byte_end":377113,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":378589,"byte_end":378603,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":379215,"byte_end":379221,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382044,"byte_end":382049,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4034},{"krate":0,"index":4035},{"krate":0,"index":4036}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382326,"byte_end":382338,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390809,"byte_end":390813,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":391387,"byte_end":391401,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395846,"byte_end":395852,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396286,"byte_end":396290,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":397543,"byte_end":397549,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":427272,"byte_end":427282,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4124}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430232,"byte_end":430238,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430487,"byte_end":430500,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":434226,"byte_end":434235,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4151}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":445677,"byte_end":445682,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":454853,"byte_end":454864,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4197}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455094,"byte_end":455100,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455307,"byte_end":455317,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414161,"byte_end":414165,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414292,"byte_end":414296,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4348}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414622,"byte_end":414626,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4354},{"krate":0,"index":4355}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415129,"byte_end":415141,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415700,"byte_end":415706,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4371}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415835,"byte_end":415841,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416169,"byte_end":416175,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":4385}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416798,"byte_end":416812,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417661,"byte_end":417668,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4402}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417798,"byte_end":417805,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4409}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418133,"byte_end":418140,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4415},{"krate":0,"index":4416}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418814,"byte_end":418829,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":419704,"byte_end":419711,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4436}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420041,"byte_end":420048,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4440},{"krate":0,"index":4442},{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420561,"byte_end":420576,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421215,"byte_end":421224,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421556,"byte_end":421565,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4466},{"krate":0,"index":4468},{"krate":0,"index":4469}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":422198,"byte_end":422215,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423052,"byte_end":423057,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4493}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423240,"byte_end":423245,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423441,"byte_end":423446,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4503},{"krate":0,"index":4504}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":424933,"byte_end":424941,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4527}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":425166,"byte_end":425174,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":4533}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":497642,"byte_end":497644,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7080},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4612},{"krate":0,"index":4615}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":498887,"byte_end":498892,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4623},{"krate":0,"index":4624}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499152,"byte_end":499165,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499964,"byte_end":499975,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4638},{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":500326,"byte_end":500345,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501317,"byte_end":501322,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4652},{"krate":0,"index":4653}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501580,"byte_end":501593,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502350,"byte_end":502361,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4666},{"krate":0,"index":4667}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502626,"byte_end":502645,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503386,"byte_end":503391,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503541,"byte_end":503546,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4682},{"krate":0,"index":4683}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505199,"byte_end":505214,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4704}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505368,"byte_end":505391,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4709}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505699,"byte_end":505714,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":506062,"byte_end":506085,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507049,"byte_end":507054,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4728},{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507648,"byte_end":507663,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4734},{"krate":0,"index":4735}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508328,"byte_end":508335,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4746},{"krate":0,"index":4747}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508712,"byte_end":508727,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":509764,"byte_end":509776,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4767},{"krate":0,"index":4768}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":510189,"byte_end":510209,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511385,"byte_end":511388,"line_start":17,"line_end":17,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511561,"byte_end":511569,"line_start":26,"line_end":26,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4791}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511866,"byte_end":511874,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4797}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":512989,"byte_end":513000,"line_start":79,"line_end":79,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":513664,"byte_end":513675,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4813}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514037,"byte_end":514047,"line_start":114,"line_end":114,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514369,"byte_end":514379,"line_start":128,"line_end":128,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514584,"byte_end":514594,"line_start":135,"line_end":135,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4831}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514700,"byte_end":514710,"line_start":141,"line_end":141,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":515779,"byte_end":515785,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4850}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":516305,"byte_end":516311,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4854},{"krate":0,"index":4856},{"krate":0,"index":4857}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":517105,"byte_end":517111,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4010,"byte_end":4021,"line_start":96,"line_end":96,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":55}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12548,"byte_end":12559,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12569,"byte_end":12578,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":71}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12588,"byte_end":12597,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12607,"byte_end":12615,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":90}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12625,"byte_end":12633,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":103}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12643,"byte_end":12654,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/mod.rs","byte_start":12664,"byte_end":12673,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":124}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4031,"byte_end":4035,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":146}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":27622,"byte_end":27630,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1088}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4045,"byte_end":4051,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3957}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4061,"byte_end":4068,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4015}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4078,"byte_end":4083,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4027}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4093,"byte_end":4108,"line_start":101,"line_end":101,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":4050}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4118,"byte_end":4124,"line_start":102,"line_end":102,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4065}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4134,"byte_end":4139,"line_start":103,"line_end":103,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4105}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4149,"byte_end":4152,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4546}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/lib.rs","byte_start":4162,"byte_end":4165,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4778}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":8096,"byte_end":8101,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":8527,"byte_end":8540,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/split_producer.rs","byte_start":10008,"byte_end":10021,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13155,"byte_end":13165,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":3635}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/binary_heap.rs","byte_start":13622,"byte_end":13626,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4918},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_map.rs","byte_start":14826,"byte_end":14830,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4970},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/btree_set.rs","byte_start":16341,"byte_end":16345,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_map.rs","byte_start":17609,"byte_end":17613,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/hash_set.rs","byte_start":19259,"byte_end":19263,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5158},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/linked_list.rs","byte_start":20369,"byte_end":20373,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5202},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/collections/vec_deque.rs","byte_start":21782,"byte_end":21786,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5274},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118352,"byte_end":118357,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":118516,"byte_end":118517,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":180},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":119027,"byte_end":119037,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5320},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120035,"byte_end":120055,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/par_bridge.rs","byte_start":120347,"byte_end":120367,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":187},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124274,"byte_end":124279,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":124507,"byte_end":124512,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5329},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":125615,"byte_end":125620,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5329},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":126555,"byte_end":126564,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":237},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127242,"byte_end":127251,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":249},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":127920,"byte_end":127933,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":128116,"byte_end":128129,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":261},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129741,"byte_end":129749,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":129963,"byte_end":129971,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130267,"byte_end":130275,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chain.rs","byte_start":130396,"byte_end":130404,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131024,"byte_end":131036,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131190,"byte_end":131202,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":312},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":131787,"byte_end":131799,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":312},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":132159,"byte_end":132169,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":337},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find.rs","byte_start":133196,"byte_end":133207,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":358},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":135729,"byte_end":135741,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":136291,"byte_end":136303,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":377},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":137369,"byte_end":137381,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":377},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":138939,"byte_end":138949,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":406},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/find_first_last/mod.rs","byte_start":140657,"byte_end":140668,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":423},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141498,"byte_end":141504,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":141703,"byte_end":141709,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5350},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142042,"byte_end":142048,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5350},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":142746,"byte_end":142754,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":143327,"byte_end":143340,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":461},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":144459,"byte_end":144467,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145145,"byte_end":145153,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/chunks.rs","byte_start":145314,"byte_end":145322,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152028,"byte_end":152043,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":152336,"byte_end":152351,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":153378,"byte_end":153391,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":514},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/consumer.rs","byte_start":154402,"byte_end":154417,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":148290,"byte_end":148297,"line_start":76,"line_end":76,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/collect/mod.rs","byte_start":149963,"byte_end":149966,"line_start":121,"line_end":121,"column_start":31,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":162901,"byte_end":162910,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163103,"byte_end":163112,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5360},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163456,"byte_end":163465,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5360},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":163971,"byte_end":163979,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":595},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/enumerate.rs","byte_start":164563,"byte_end":164580,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":604},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166386,"byte_end":166392,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166552,"byte_end":166558,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":166769,"byte_end":166775,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5369},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167319,"byte_end":167333,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":167484,"byte_end":167498,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":637},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168242,"byte_end":168256,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":637},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter.rs","byte_start":168639,"byte_end":168651,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":666},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":169927,"byte_end":169936,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170143,"byte_end":170152,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170341,"byte_end":170350,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5378},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":170913,"byte_end":170930,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171083,"byte_end":171100,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":703},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":171886,"byte_end":171903,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":703},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/filter_map.rs","byte_start":172304,"byte_end":172319,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":734},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173621,"byte_end":173628,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173807,"byte_end":173814,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":173994,"byte_end":174001,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5387},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174612,"byte_end":174627,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":174772,"byte_end":174787,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":772},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":175579,"byte_end":175594,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":772},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flat_map.rs","byte_start":176034,"byte_end":176047,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177619,"byte_end":177626,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/flatten.rs","byte_start":177860,"byte_end":177867,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5396},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":178303,"byte_end":178307,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179104,"byte_end":179108,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5405},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179298,"byte_end":179302,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5405},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":179911,"byte_end":179923,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":180779,"byte_end":180791,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":181260,"byte_end":181270,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":893},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":182430,"byte_end":182438,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183227,"byte_end":183235,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5417},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":183489,"byte_end":183497,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5417},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184065,"byte_end":184081,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/fold.rs","byte_start":184999,"byte_end":185015,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":936},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":185744,"byte_end":185759,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":972},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186155,"byte_end":186170,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":972},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/for_each.rs","byte_start":186594,"byte_end":186609,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":972},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187492,"byte_end":187495,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":187764,"byte_end":187772,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":2037},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188128,"byte_end":188138,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188447,"byte_end":188457,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":1769},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":188920,"byte_end":188927,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6173},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189461,"byte_end":189469,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":967},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":189768,"byte_end":189775,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":6199},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190097,"byte_end":190105,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":4211},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190383,"byte_end":190389,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190650,"byte_end":190656,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":190923,"byte_end":190929,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191192,"byte_end":191198,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191468,"byte_end":191474,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/from_par_iter.rs","byte_start":191917,"byte_end":191920,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":3096},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195587,"byte_end":195591,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":195594,"byte_end":195599,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198601,"byte_end":198605,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":198608,"byte_end":198613,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":199921,"byte_end":199926,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":201941,"byte_end":201949,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1107},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203054,"byte_end":203058,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":203061,"byte_end":203066,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":204054,"byte_end":204062,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":205191,"byte_end":205205,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/plumbing/mod.rs","byte_start":207563,"byte_end":207571,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1144},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":211834,"byte_end":211841,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212743,"byte_end":212750,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5440},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":212946,"byte_end":212953,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5440},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":213649,"byte_end":213664,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1201},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":214555,"byte_end":214570,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1201},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215088,"byte_end":215101,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1233},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":215829,"byte_end":215840,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216681,"byte_end":216692,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5455},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":216973,"byte_end":216984,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5455},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":217594,"byte_end":217613,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1268},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_fold.rs","byte_start":218576,"byte_end":218595,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1268},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219484,"byte_end":219498,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":1542}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219540,"byte_end":219554,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":219656,"byte_end":219670,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1307},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220197,"byte_end":220211,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1307},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220460,"byte_end":220474,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1307},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/reduce.rs","byte_start":220715,"byte_end":220727,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":221842,"byte_end":221846,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222078,"byte_end":222082,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5467},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":222417,"byte_end":222421,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5467},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/skip.rs","byte_start":223002,"byte_end":223010,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1383},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224148,"byte_end":224165,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":1542}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224207,"byte_end":224224,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224326,"byte_end":224343,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1405},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":224957,"byte_end":224974,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1405},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225241,"byte_end":225258,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1405},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce.rs","byte_start":225734,"byte_end":225749,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1445},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227089,"byte_end":227110,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":1542}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227144,"byte_end":227165,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227259,"byte_end":227280,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1471},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":227859,"byte_end":227880,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1471},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228117,"byte_end":228138,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1471},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/try_reduce_with.rs","byte_start":228793,"byte_end":228812,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1504},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234128,"byte_end":234133,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5477},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234313,"byte_end":234318,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5477},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/splitter.rs","byte_start":234806,"byte_end":234819,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1539},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":235780,"byte_end":235784,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236016,"byte_end":236020,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5486},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236355,"byte_end":236359,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5486},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/take.rs","byte_start":236922,"byte_end":236930,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1577},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":237868,"byte_end":237871,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5496},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238028,"byte_end":238031,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238233,"byte_end":238236,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5496},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":238710,"byte_end":238713,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5496},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":239455,"byte_end":239463,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1620},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":240142,"byte_end":240153,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1633},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241325,"byte_end":241336,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":241477,"byte_end":241488,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1652},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242227,"byte_end":242238,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1652},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map.rs","byte_start":242629,"byte_end":242638,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1683},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":243875,"byte_end":243882,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5505},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244114,"byte_end":244121,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244352,"byte_end":244359,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5505},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":244875,"byte_end":244882,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5505},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":245727,"byte_end":245735,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1737},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":246518,"byte_end":246533,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1753},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":247866,"byte_end":247877,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1775},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248258,"byte_end":248269,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1775},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248560,"byte_end":248571,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1775},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":248885,"byte_end":248900,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249066,"byte_end":249081,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1805},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":249925,"byte_end":249940,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1805},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":250400,"byte_end":250413,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1841},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":251944,"byte_end":251951,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5517},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252124,"byte_end":252131,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252374,"byte_end":252381,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5517},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":252921,"byte_end":252928,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5517},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":253803,"byte_end":253811,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1901},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":254621,"byte_end":254636,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1918},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256086,"byte_end":256101,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":256283,"byte_end":256298,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1941},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/map_with.rs","byte_start":257154,"byte_end":257169,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1941},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258084,"byte_end":258087,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258309,"byte_end":258312,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5529},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":258696,"byte_end":258699,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5529},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259359,"byte_end":259368,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":259989,"byte_end":259998,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2018},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip.rs","byte_start":260655,"byte_end":260666,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2030},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262075,"byte_end":262080,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262349,"byte_end":262354,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5542},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/zip_eq.rs","byte_start":262746,"byte_end":262751,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5542},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":272824,"byte_end":272834,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273085,"byte_end":273095,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6433},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":273472,"byte_end":273482,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6433},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":274378,"byte_end":274387,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2100},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275197,"byte_end":275206,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2114},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":275987,"byte_end":276005,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":276325,"byte_end":276343,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2128},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":279208,"byte_end":279221,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280354,"byte_end":280367,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave.rs","byte_start":280928,"byte_end":280941,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":281868,"byte_end":281886,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282527,"byte_end":282545,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6446},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/interleave_shortest.rs","byte_start":282922,"byte_end":282940,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6446},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284042,"byte_end":284053,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284283,"byte_end":284294,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6458},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":284824,"byte_end":284835,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6458},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":285742,"byte_end":285750,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2217},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286317,"byte_end":286336,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":286577,"byte_end":286596,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2229},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":288771,"byte_end":288786,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":289558,"byte_end":289573,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290221,"byte_end":290236,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290584,"byte_end":290603,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":290828,"byte_end":290847,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2265},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":291925,"byte_end":291944,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2265},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/intersperse.rs","byte_start":292484,"byte_end":292501,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2289},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294274,"byte_end":294280,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294440,"byte_end":294446,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":294657,"byte_end":294663,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6468},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295125,"byte_end":295131,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6468},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":295872,"byte_end":295880,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2335},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":296557,"byte_end":296571,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2347},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297831,"byte_end":297845,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":297992,"byte_end":298006,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2365},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":298752,"byte_end":298766,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2365},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":299287,"byte_end":299299,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":300245,"byte_end":300254,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6477},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301004,"byte_end":301013,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6477},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/update.rs","byte_start":301117,"byte_end":301126,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6477},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301431,"byte_end":301443,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2437},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":301787,"byte_end":301799,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2437},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302155,"byte_end":302167,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2437},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/noop.rs","byte_start":302361,"byte_end":302372,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2459},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":302926,"byte_end":302929,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303110,"byte_end":303113,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":6490},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":303448,"byte_end":303451,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":6490},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304021,"byte_end":304029,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2483},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/rev.rs","byte_start":304544,"byte_end":304555,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305774,"byte_end":305780,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":305984,"byte_end":305990,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6499},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306325,"byte_end":306331,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6499},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":306909,"byte_end":306917,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2526},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":307552,"byte_end":307566,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":308858,"byte_end":308864,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309068,"byte_end":309074,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6509},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309409,"byte_end":309415,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":6509},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":309993,"byte_end":310001,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2566},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/len.rs","byte_start":310636,"byte_end":310650,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2576},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":311949,"byte_end":311955,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312142,"byte_end":312148,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6519},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":312596,"byte_end":312602,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6519},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313247,"byte_end":313255,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2617},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":313812,"byte_end":313826,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2627},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314722,"byte_end":314736,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":314848,"byte_end":314862,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2642},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315510,"byte_end":315524,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2642},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/cloned.rs","byte_start":315844,"byte_end":315856,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2664},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":316900,"byte_end":316906,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317093,"byte_end":317099,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6528},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":317546,"byte_end":317552,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6528},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318196,"byte_end":318204,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2702},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":318760,"byte_end":318774,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2712},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319743,"byte_end":319757,"line_start":143,"line_end":143,"column_start":9,"column_end":23},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":319869,"byte_end":319883,"line_start":149,"line_end":149,"column_start":36,"column_end":50},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2727},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320530,"byte_end":320544,"line_start":178,"line_end":178,"column_start":45,"column_end":59},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2727},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/copied.rs","byte_start":320863,"byte_end":320875,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2749},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":321980,"byte_end":321995,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2775},"to":{"krate":2,"index":1534}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322017,"byte_end":322032,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322181,"byte_end":322196,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2775},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322746,"byte_end":322761,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2775},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":322993,"byte_end":323008,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2775},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/product.rs","byte_start":323193,"byte_end":323206,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2800},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324194,"byte_end":324205,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2824},"to":{"krate":2,"index":1534}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324227,"byte_end":324238,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324379,"byte_end":324390,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2824},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":324857,"byte_end":324868,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2824},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325084,"byte_end":325095,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2824},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/sum.rs","byte_start":325268,"byte_end":325277,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2849},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326373,"byte_end":326380,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6537},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326541,"byte_end":326548,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":326763,"byte_end":326770,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6537},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327230,"byte_end":327237,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6537},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":327979,"byte_end":327987,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2891},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":328658,"byte_end":328673,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2903},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":329883,"byte_end":329898,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330048,"byte_end":330063,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2921},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":330806,"byte_end":330821,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2921},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/inspect.rs","byte_start":331200,"byte_end":331213,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2950},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332601,"byte_end":332605,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332763,"byte_end":332767,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":332877,"byte_end":332886,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333080,"byte_end":333089,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6546},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":333599,"byte_end":333608,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6546},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":334308,"byte_end":334316,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2997},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":335025,"byte_end":335042,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3006},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336140,"byte_end":336153,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336500,"byte_end":336513,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":336764,"byte_end":336777,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":337088,"byte_end":337105,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3041},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338063,"byte_end":338080,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3041},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":338559,"byte_end":338574,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3062},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/panic_fuse.rs","byte_start":339423,"byte_end":339439,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3082},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340157,"byte_end":340166,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340355,"byte_end":340364,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6562},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":340994,"byte_end":341011,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3108},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":341811,"byte_end":341828,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3108},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/while_some.rs","byte_start":342231,"byte_end":342246,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3129},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345066,"byte_end":345076,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345373,"byte_end":345383,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"kind":{"Impl":{"id":336}},"from":{"krate":5,"index":320},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":345695,"byte_end":345703,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"kind":{"Impl":{"id":337}},"from":{"krate":5,"index":967},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346038,"byte_end":346046,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"kind":{"Impl":{"id":338}},"from":{"krate":5,"index":967},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346382,"byte_end":346390,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":4211},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":346684,"byte_end":346692,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"kind":{"Impl":{"id":340}},"from":{"krate":5,"index":4211},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347162,"byte_end":347169,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"kind":{"Impl":{"id":341}},"from":{"krate":1,"index":6173},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":347624,"byte_end":347631,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"kind":{"Impl":{"id":342}},"from":{"krate":1,"index":6173},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348158,"byte_end":348165,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"kind":{"Impl":{"id":343}},"from":{"krate":1,"index":6199},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348497,"byte_end":348504,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"kind":{"Impl":{"id":344}},"from":{"krate":1,"index":6199},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":348956,"byte_end":348966,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":5,"index":1769},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349406,"byte_end":349416,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"kind":{"Impl":{"id":346}},"from":{"krate":5,"index":1769},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":349820,"byte_end":349826,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350481,"byte_end":350487,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"kind":{"Impl":{"id":348}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":350954,"byte_end":350960,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"kind":{"Impl":{"id":349}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351221,"byte_end":351227,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351503,"byte_end":351509,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":5,"index":4325},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":351880,"byte_end":351888,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"kind":{"Impl":{"id":352}},"from":{"krate":5,"index":2037},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352174,"byte_end":352182,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"kind":{"Impl":{"id":353}},"from":{"krate":5,"index":2037},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/extend.rs","byte_start":352594,"byte_end":352597,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"kind":{"Impl":{"id":354}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":3931}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":353908,"byte_end":353914,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":354763,"byte_end":354769,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":355219,"byte_end":355233,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3319},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356284,"byte_end":356291,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6580},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":356609,"byte_end":356616,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6580},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":357228,"byte_end":357243,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3343},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358040,"byte_end":358044,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3353},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358422,"byte_end":358426,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3353},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/repeat.rs","byte_start":358555,"byte_end":358559,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3353},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358898,"byte_end":358902,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":358905,"byte_end":358909,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":361581,"byte_end":361586,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3401},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":362467,"byte_end":362476,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3417},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":363513,"byte_end":363525,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":3435},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":364156,"byte_end":364162,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3448},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":365563,"byte_end":365569,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3465},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":366506,"byte_end":366519,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3483},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":367782,"byte_end":367795,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3483},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":368459,"byte_end":368470,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3511},"to":{"krate":0,"index":1115}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":369211,"byte_end":369223,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3529},"to":{"krate":0,"index":1123}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/unzip.rs","byte_start":370307,"byte_end":370315,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3554},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371446,"byte_end":371451,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371541,"byte_end":371546,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371682,"byte_end":371687,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3577},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":371973,"byte_end":371978,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3577},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/empty.rs","byte_start":372458,"byte_end":372471,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3599},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":373784,"byte_end":373788,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6590},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/once.rs","byte_start":374074,"byte_end":374078,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6590},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":31738,"byte_end":31739,"line_start":268,"line_end":268,"column_start":67,"column_end":68},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3646},"to":{"krate":0,"index":3639}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":33247,"byte_end":33248,"line_start":315,"line_end":315,"column_start":70,"column_end":71},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3657},"to":{"krate":0,"index":3650}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34137,"byte_end":34142,"line_start":341,"line_end":341,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":34145,"byte_end":34149,"line_start":341,"line_end":341,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":91883,"byte_end":91884,"line_start":2070,"line_end":2070,"column_start":52,"column_end":53},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3861},"to":{"krate":0,"index":3635}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":92251,"byte_end":92267,"line_start":2084,"line_end":2084,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":3661},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116105,"byte_end":116111,"line_start":2834,"line_end":2834,"column_start":21,"column_end":27},"kind":{"Impl":{"id":384}},"from":{"krate":2,"index":29038},"to":{"krate":0,"index":3936}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/iter/mod.rs","byte_start":116436,"byte_end":116442,"line_start":2851,"line_end":2851,"column_start":24,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":2,"index":29129},"to":{"krate":0,"index":3936}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375462,"byte_end":375468,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"kind":{"Impl":{"id":386}},"from":{"krate":2,"index":29038},"to":{"krate":0,"index":3635}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375641,"byte_end":375649,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6602},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":375944,"byte_end":375952,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6602},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":377109,"byte_end":377113,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6611},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":378589,"byte_end":378603,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":3997},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/option.rs","byte_start":379215,"byte_end":379221,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"kind":{"Impl":{"id":395}},"from":{"krate":2,"index":29038},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382044,"byte_end":382049,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"kind":{"Impl":{"id":396}},"from":{"krate":2,"index":27045},"to":{"krate":0,"index":3635}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range.rs","byte_start":382326,"byte_end":382338,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4037},"to":{"krate":2,"index":3808}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":390809,"byte_end":390813,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/range_inclusive.rs","byte_start":391387,"byte_end":391401,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"kind":{"Impl":{"id":399}},"from":{"krate":2,"index":27099},"to":{"krate":0,"index":3635}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":395846,"byte_end":395852,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":400}},"from":{"krate":2,"index":29129},"to":{"krate":0,"index":3635}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":396286,"byte_end":396290,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6969},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/result.rs","byte_start":397543,"byte_end":397549,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":408}},"from":{"krate":2,"index":29129},"to":{"krate":0,"index":3927}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":427272,"byte_end":427282,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4117},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430232,"byte_end":430238,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4128},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":430487,"byte_end":430500,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4134},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":434226,"byte_end":434235,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4144},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mergesort.rs","byte_start":445677,"byte_end":445682,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4166},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":454853,"byte_end":454864,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4191},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455094,"byte_end":455100,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4198},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/quicksort.rs","byte_start":455307,"byte_end":455317,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4204},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414161,"byte_end":414165,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7035},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414292,"byte_end":414296,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7035},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":414622,"byte_end":414626,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7035},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415129,"byte_end":415141,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4357},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415700,"byte_end":415706,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7043},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":415835,"byte_end":415841,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7043},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416169,"byte_end":416175,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7043},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":416798,"byte_end":416812,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4387},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417661,"byte_end":417668,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7052},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":417798,"byte_end":417805,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7052},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418133,"byte_end":418140,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7052},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":418814,"byte_end":418829,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4418},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":419704,"byte_end":419711,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7061},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420041,"byte_end":420048,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7061},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":420561,"byte_end":420576,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":4445},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421215,"byte_end":421224,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7069},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":421556,"byte_end":421565,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7069},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":422198,"byte_end":422215,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":4471},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423052,"byte_end":423057,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":4483},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423240,"byte_end":423245,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4483},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":423441,"byte_end":423446,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":4483},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":424933,"byte_end":424941,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":4517},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/slice/mod.rs","byte_start":425166,"byte_end":425174,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":4517},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495783,"byte_end":495788,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495791,"byte_end":495795,"line_start":283,"line_end":283,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":495798,"byte_end":495802,"line_start":283,"line_end":283,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":497642,"byte_end":497644,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":4605},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":498887,"byte_end":498892,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7081},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499152,"byte_end":499165,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":4618},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":499964,"byte_end":499975,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":7090},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":500326,"byte_end":500345,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":4632},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501317,"byte_end":501322,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7099},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":501580,"byte_end":501593,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":4647},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502350,"byte_end":502361,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7108},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":502626,"byte_end":502645,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":4661},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503386,"byte_end":503391,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":7117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":503541,"byte_end":503546,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7117},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505199,"byte_end":505214,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505368,"byte_end":505391,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":4695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":505699,"byte_end":505714,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7130},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":506062,"byte_end":506085,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":4695},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507049,"byte_end":507054,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7143},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":507648,"byte_end":507663,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7153},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508328,"byte_end":508335,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7163},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":508712,"byte_end":508727,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":4737},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":509764,"byte_end":509776,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":7176},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/str.rs","byte_start":510189,"byte_end":510209,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":4757},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511385,"byte_end":511388,"line_start":17,"line_end":17,"column_start":40,"column_end":43},"kind":{"Impl":{"id":463}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":3635}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511561,"byte_end":511569,"line_start":26,"line_end":26,"column_start":36,"column_end":44},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":7189},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":511866,"byte_end":511874,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":7189},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":512989,"byte_end":513000,"line_start":79,"line_end":79,"column_start":43,"column_end":54},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":4799},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":513664,"byte_end":513675,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":4799},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514037,"byte_end":514047,"line_start":114,"line_end":114,"column_start":36,"column_end":46},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":4814},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514369,"byte_end":514379,"line_start":128,"line_end":128,"column_start":47,"column_end":57},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":4814},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514584,"byte_end":514594,"line_start":135,"line_end":135,"column_start":45,"column_end":55},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":4814},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/vec.rs","byte_start":514700,"byte_end":514710,"line_start":141,"line_end":141,"column_start":32,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":4814},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":515779,"byte_end":515785,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":472}},"from":{"krate":15,"index":170},"to":{"krate":0,"index":3661}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":516305,"byte_end":516311,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":473}},"from":{"krate":15,"index":170},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.3.0/src/par_either.rs","byte_start":517105,"byte_end":517111,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":474}},"from":{"krate":15,"index":170},"to":{"krate":0,"index":3931}}]}