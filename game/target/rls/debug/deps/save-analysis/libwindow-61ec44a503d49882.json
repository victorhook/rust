{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0","program":"/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","window","/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=61ec44a503d49882","-C","extra-filename=-61ec44a503d49882","--out-dir","/home/victor/coding/rust/game/target/rls/debug/deps","-L","dependency=/home/victor/coding/rust/game/target/rls/debug/deps","--extern","graphics_api_version=/home/victor/coding/rust/game/target/rls/debug/deps/libgraphics_api_version-bfb7e8dd04ceb569.rmeta","--extern","input=/home/victor/coding/rust/game/target/rls/debug/deps/libinput-f2d32bf3e873dc9e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/victor/coding/rust/game/target/rls/debug/deps/libwindow-61ec44a503d49882.rmeta"},"prelude":{"crate_id":{"name":"window","disambiguator":[10644389130073107588,18045276469512688191]},"crate_root":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src","external_crates":[{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":15,"id":{"name":"graphics_api_version","disambiguator":[13841328701140929715,5640819069176751652]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":16,"id":{"name":"input","disambiguator":[7877770970026603337,18371136413494895667]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":17,"id":{"name":"bitflags","disambiguator":[17215305307943534339,17386179787251686105]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":18,"id":{"name":"serde_derive","disambiguator":[3395802976844451380,10191292105346138767]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":19,"id":{"name":"serde","disambiguator":[15025683417156757502,5502632033422770241]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":20,"id":{"name":"viewport","disambiguator":[11992426241601430343,5130015623459904336]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","num":21,"id":{"name":"float","disambiguator":[2650214191000170641,4401102591703803147]}}],"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":0,"byte_end":26264,"line_start":1,"line_end":800,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":30},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":1273,"byte_end":1280,"line_start":33,"line_end":33,"column_start":31,"column_end":38},"alias_span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":1284,"byte_end":1287,"line_start":33,"line_end":33,"column_start":42,"column_end":45},"name":"Api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":59},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":1319,"byte_end":1346,"line_start":34,"line_end":34,"column_start":31,"column_end":58},"alias_span":null,"name":"UnsupportedGraphicsApiError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":1367,"byte_end":1375,"line_start":35,"line_end":35,"column_start":20,"column_end":28},"alias_span":null,"name":"NoWindow","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":0,"byte_end":26264,"line_start":1,"line_end":800,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":66},{"krate":0,"index":189},{"krate":0,"index":198},{"krate":0,"index":197},{"krate":0,"index":195},{"krate":0,"index":192},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":200},{"krate":0,"index":211},{"krate":0,"index":210},{"krate":0,"index":208},{"krate":0,"index":205},{"krate":0,"index":203},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":114},{"krate":0,"index":135},{"krate":0,"index":213},{"krate":0,"index":226},{"krate":0,"index":139}],"decl_id":null,"docs":" Window storage and interfacing traits.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":23,"byte_end":61,"line_start":2,"line_end":2,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":26970,"byte_end":26978,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"NoWindow","qualname":"::no_window::NoWindow","value":"NoWindow {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" A window without user interface, often used in server event loops.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":27150,"byte_end":27153,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<NoWindow>::new","value":"fn (settings: &WindowSettings) -> NoWindow","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `NoWindow`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":66},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":1578,"byte_end":1589,"line_start":44,"line_end":44,"column_start":10,"column_end":21},"name":"ProcAddress","qualname":"::ProcAddress","value":"*const ()","parent":null,"children":[],"decl_id":null,"docs":" The type of an OpenGL function address.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2026,"byte_end":2030,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"Size","qualname":"::Size","value":"Size { width, height }","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" Structure to store the window size.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":190},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2060,"byte_end":2065,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::Size::width","value":"f64","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The width.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":191},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2100,"byte_end":2106,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"height","qualname":"::Size::height","value":"f64","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The height.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":3902,"byte_end":3910,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"Position","qualname":"::Position","value":"Position { x, y }","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"decl_id":null,"docs":" Structure to store the window position.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":201},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":3947,"byte_end":3948,"line_start":141,"line_end":141,"column_start":9,"column_end":10},"name":"x","qualname":"::Position::x","value":"i32","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The x coordinate.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":202},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":3989,"byte_end":3990,"line_start":143,"line_end":143,"column_start":9,"column_end":10},"name":"y","qualname":"::Position::y","value":"i32","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The y coordinate.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":4952,"byte_end":4975,"line_start":186,"line_end":186,"column_start":11,"column_end":34},"name":"BuildFromWindowSettings","qualname":"::BuildFromWindowSettings","value":"BuildFromWindowSettings: Sized","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" Constructs a window from a [`WindowSettings`](./struct.WindowSettings.html)\n object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":5224,"byte_end":5250,"line_start":193,"line_end":193,"column_start":8,"column_end":34},"name":"build_from_window_settings","qualname":"::BuildFromWindowSettings::build_from_window_settings","value":"fn (settings: &WindowSettings) -> Result<Self, Box<Error>>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Builds the window from a `WindowSettings` object.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":5796,"byte_end":5802,"line_start":206,"line_end":206,"column_start":11,"column_end":17},"name":"Window","qualname":"::Window","value":"Window","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" Trait representing the minimum requirements for defining a window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":5860,"byte_end":5876,"line_start":208,"line_end":208,"column_start":8,"column_end":24},"name":"set_should_close","qualname":"::Window::set_should_close","value":"fn (&mut self, value: bool) -> ()","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Tells the window to close or stay open.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":5959,"byte_end":5971,"line_start":211,"line_end":211,"column_start":8,"column_end":20},"name":"should_close","qualname":"::Window::should_close","value":"fn (&self) -> bool","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Returns true if the window should close.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":6033,"byte_end":6037,"line_start":214,"line_end":214,"column_start":8,"column_end":12},"name":"size","qualname":"::Window::size","value":"fn (&self) -> Size","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Gets the size of the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":6297,"byte_end":6309,"line_start":221,"line_end":221,"column_start":8,"column_end":20},"name":"swap_buffers","qualname":"::Window::swap_buffers","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Swaps render buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":6408,"byte_end":6418,"line_start":224,"line_end":224,"column_start":8,"column_end":18},"name":"wait_event","qualname":"::Window::wait_event","value":"fn (&mut self) -> Event","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Wait indefinitely for an input event to be available from the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":6647,"byte_end":6665,"line_start":230,"line_end":230,"column_start":8,"column_end":26},"name":"wait_event_timeout","qualname":"::Window::wait_event_timeout","value":"fn (&mut self, timeout: Duration) -> Option<Event>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Wait for an input event to be available from the window or for the\n specified timeout to be reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":6822,"byte_end":6832,"line_start":235,"line_end":235,"column_start":8,"column_end":18},"name":"poll_event","qualname":"::Window::poll_event","value":"fn (&mut self) -> Option<Event>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Polls an input event from the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":7165,"byte_end":7174,"line_start":244,"line_end":244,"column_start":8,"column_end":17},"name":"draw_size","qualname":"::Window::draw_size","value":"fn (&self) -> Size","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Gets the draw size of the window.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":7503,"byte_end":7517,"line_start":253,"line_end":253,"column_start":11,"column_end":25},"name":"AdvancedWindow","qualname":"::AdvancedWindow","value":"AdvancedWindow: Window + Sized","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"decl_id":null,"docs":" Trait representing a window with the most features that are still generic.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":7591,"byte_end":7600,"line_start":255,"line_end":255,"column_start":8,"column_end":17},"name":"get_title","qualname":"::AdvancedWindow::get_title","value":"fn (&self) -> String","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Gets a copy of the title of the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":7665,"byte_end":7674,"line_start":258,"line_end":258,"column_start":8,"column_end":17},"name":"set_title","qualname":"::AdvancedWindow::set_title","value":"fn (&mut self, value: String) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets the title of the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":7903,"byte_end":7908,"line_start":265,"line_end":265,"column_start":8,"column_end":13},"name":"title","qualname":"::AdvancedWindow::title","value":"fn (mut self, value: String) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets title on window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":8091,"byte_end":8106,"line_start":273,"line_end":273,"column_start":8,"column_end":23},"name":"get_exit_on_esc","qualname":"::AdvancedWindow::get_exit_on_esc","value":"fn (&self) -> bool","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Gets whether to exit when pressing esc.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":8220,"byte_end":8235,"line_start":278,"line_end":278,"column_start":8,"column_end":23},"name":"set_exit_on_esc","qualname":"::AdvancedWindow::set_exit_on_esc","value":"fn (&mut self, value: bool) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets whether to exit when pressing esc.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":8544,"byte_end":8555,"line_start":287,"line_end":287,"column_start":8,"column_end":19},"name":"exit_on_esc","qualname":"::AdvancedWindow::exit_on_esc","value":"fn (mut self, value: bool) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets whether to exit when pressing the Esc button.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":8788,"byte_end":8807,"line_start":296,"line_end":296,"column_start":8,"column_end":27},"name":"get_automatic_close","qualname":"::AdvancedWindow::get_automatic_close","value":"fn (&self) -> bool","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Gets whether the window will automatically close when attempting\n to close it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":9214,"byte_end":9233,"line_start":305,"line_end":305,"column_start":8,"column_end":27},"name":"set_automatic_close","qualname":"::AdvancedWindow::set_automatic_close","value":"fn (&mut self, value: bool) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets whether the window will automatically close when attempting\n to close it. If this is disabled, attempts to close the window\n can be detected via an `Input::Close(..)` event, and\n [`Window::set_should_close()`](trait.Window.html#tymethod.set_should_close)\n can be called to actually close the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":9832,"byte_end":9847,"line_start":318,"line_end":318,"column_start":8,"column_end":23},"name":"automatic_close","qualname":"::AdvancedWindow::automatic_close","value":"fn (mut self, value: bool) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets whether the window will automatically close when attempting\n to close it. If this is disabled, attempts to close the window\n can be detected via an `Input::Close(..)` event, and\n [`Window::set_should_close()`](trait.Window.html#tymethod.set_should_close)\n can be called to actually close the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":10118,"byte_end":10136,"line_start":327,"line_end":327,"column_start":8,"column_end":26},"name":"set_capture_cursor","qualname":"::AdvancedWindow::set_capture_cursor","value":"fn (&mut self, value: bool) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets whether to capture/grab the cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":10400,"byte_end":10414,"line_start":334,"line_end":334,"column_start":8,"column_end":22},"name":"capture_cursor","qualname":"::AdvancedWindow::capture_cursor","value":"fn (mut self, value: bool) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets whether to capture/grab the cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":10620,"byte_end":10624,"line_start":342,"line_end":342,"column_start":8,"column_end":12},"name":"show","qualname":"::AdvancedWindow::show","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Shows the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":10750,"byte_end":10754,"line_start":347,"line_end":347,"column_start":8,"column_end":12},"name":"hide","qualname":"::AdvancedWindow::hide","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Hides the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":10882,"byte_end":10894,"line_start":352,"line_end":352,"column_start":8,"column_end":20},"name":"get_position","qualname":"::AdvancedWindow::get_position","value":"fn (&self) -> Option<Position>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Gets the position of window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":11038,"byte_end":11050,"line_start":357,"line_end":357,"column_start":8,"column_end":20},"name":"set_position","qualname":"::AdvancedWindow::set_position","value":"fn <P> (&mut self, val: P) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets the position of window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":11194,"byte_end":11202,"line_start":362,"line_end":362,"column_start":8,"column_end":16},"name":"set_size","qualname":"::AdvancedWindow::set_size","value":"fn <S> (&mut self, val: S) -> ()","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets the window size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":11522,"byte_end":11530,"line_start":371,"line_end":371,"column_start":8,"column_end":16},"name":"position","qualname":"::AdvancedWindow::position","value":"fn <P> (mut self, val: P) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Sets the position of window.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":135},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":12263,"byte_end":12275,"line_start":390,"line_end":390,"column_start":11,"column_end":23},"name":"OpenGLWindow","qualname":"::OpenGLWindow","value":"OpenGLWindow: Window","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"decl_id":null,"docs":" Trait for OpenGL specific operations on a window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":12443,"byte_end":12459,"line_start":394,"line_end":394,"column_start":8,"column_end":24},"name":"get_proc_address","qualname":"::OpenGLWindow::get_proc_address","value":"fn (&mut self, proc_name: &str) -> ProcAddress","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Returns the address of the specified OpenGL function if it exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":12588,"byte_end":12598,"line_start":397,"line_end":397,"column_start":8,"column_end":18},"name":"is_current","qualname":"::OpenGLWindow::is_current","value":"fn (&self) -> bool","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Returns true if this window's gl context is the current gl context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":12684,"byte_end":12696,"line_start":400,"line_end":400,"column_start":8,"column_end":20},"name":"make_current","qualname":"::OpenGLWindow::make_current","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Make the window's gl context the current gl context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":13059,"byte_end":13073,"line_start":410,"line_end":410,"column_start":12,"column_end":26},"name":"WindowSettings","qualname":"::WindowSettings","value":"WindowSettings {  }","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":" Settings structure for window behavior.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":13622,"byte_end":13625,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"new","qualname":"<WindowSettings>::new","value":"fn <T, S> (title: T, size: S) -> WindowSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates window settings with defaults.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":14587,"byte_end":14592,"line_start":464,"line_end":464,"column_start":12,"column_end":17},"name":"build","qualname":"<WindowSettings>::build","value":"fn <W> (&self) -> Result<W, Box<Error>>","parent":null,"children":[],"decl_id":null,"docs":" Builds window from the given settings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":14780,"byte_end":14789,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"get_title","qualname":"<WindowSettings>::get_title","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Gets the title of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":14895,"byte_end":14904,"line_start":474,"line_end":474,"column_start":12,"column_end":21},"name":"set_title","qualname":"<WindowSettings>::set_title","value":"fn (&mut self, value: String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":15181,"byte_end":15186,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"name":"title","qualname":"<WindowSettings>::title","value":"fn (mut self, value: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":15324,"byte_end":15332,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"get_size","qualname":"<WindowSettings>::get_size","value":"fn (&self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Gets the size of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":15426,"byte_end":15434,"line_start":494,"line_end":494,"column_start":12,"column_end":20},"name":"set_size","qualname":"<WindowSettings>::set_size","value":"fn (&mut self, value: Size) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":15705,"byte_end":15709,"line_start":503,"line_end":503,"column_start":12,"column_end":16},"name":"size","qualname":"<WindowSettings>::size","value":"fn (mut self, value: Size) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":15859,"byte_end":15873,"line_start":509,"line_end":509,"column_start":12,"column_end":26},"name":"get_fullscreen","qualname":"<WindowSettings>::get_fullscreen","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows will be fullscreen.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":15988,"byte_end":16002,"line_start":514,"line_end":514,"column_start":12,"column_end":26},"name":"set_fullscreen","qualname":"<WindowSettings>::set_fullscreen","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows will be fullscreen.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":16306,"byte_end":16316,"line_start":523,"line_end":523,"column_start":12,"column_end":22},"name":"fullscreen","qualname":"<WindowSettings>::fullscreen","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows will be fullscreen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":16493,"byte_end":16508,"line_start":529,"line_end":529,"column_start":12,"column_end":27},"name":"get_exit_on_esc","qualname":"<WindowSettings>::get_exit_on_esc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should exit when the Esc key is pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":16645,"byte_end":16660,"line_start":534,"line_end":534,"column_start":12,"column_end":27},"name":"set_exit_on_esc","qualname":"<WindowSettings>::set_exit_on_esc","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should exit when the Esc key is pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":16988,"byte_end":16999,"line_start":543,"line_end":543,"column_start":12,"column_end":23},"name":"exit_on_esc","qualname":"<WindowSettings>::exit_on_esc","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should exit when the Esc key is pressed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":17205,"byte_end":17224,"line_start":550,"line_end":550,"column_start":12,"column_end":31},"name":"get_automatic_close","qualname":"<WindowSettings>::get_automatic_close","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should automatically close when the X or\n ALT+F4 are pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":17640,"byte_end":17659,"line_start":559,"line_end":559,"column_start":12,"column_end":31},"name":"set_automatic_close","qualname":"<WindowSettings>::set_automatic_close","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should automatically close when the X or\n ALT+F4 are pressed. If this is disabled, attempts to close the window\n can be detected via an `Input::Close(..)` event, and\n [`Window::set_should_close()`](trait.Window.html#tymethod.set_should_close)\n can be called to actually close the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":18274,"byte_end":18289,"line_start":572,"line_end":572,"column_start":12,"column_end":27},"name":"automatic_close","qualname":"<WindowSettings>::automatic_close","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should automatically close when the X or\n ALT+F4 are pressed. If this is disabled, attempts to close the window\n can be detected via an `Input::Close(..)` event, and\n [`Window::set_should_close()`](trait.Window.html#tymethod.set_should_close)\n can be called to actually close the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":18562,"byte_end":18573,"line_start":581,"line_end":581,"column_start":12,"column_end":23},"name":"get_samples","qualname":"<WindowSettings>::get_samples","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of samples to use for anti-aliasing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":18795,"byte_end":18806,"line_start":589,"line_end":589,"column_start":12,"column_end":23},"name":"set_samples","qualname":"<WindowSettings>::set_samples","value":"fn (&mut self, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of samples to use for anti-aliasing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":19210,"byte_end":19217,"line_start":601,"line_end":601,"column_start":12,"column_end":19},"name":"samples","qualname":"<WindowSettings>::samples","value":"fn (mut self, value: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of samples to use for anti-aliasing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":19473,"byte_end":19482,"line_start":610,"line_end":610,"column_start":12,"column_end":21},"name":"get_vsync","qualname":"<WindowSettings>::get_vsync","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should use vsync.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":19697,"byte_end":19706,"line_start":618,"line_end":618,"column_start":12,"column_end":21},"name":"set_vsync","qualname":"<WindowSettings>::set_vsync","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use vsync.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":20100,"byte_end":20105,"line_start":630,"line_end":630,"column_start":12,"column_end":17},"name":"vsync","qualname":"<WindowSettings>::vsync","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use vsync.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":20479,"byte_end":20501,"line_start":640,"line_end":640,"column_start":12,"column_end":34},"name":"get_maybe_graphics_api","qualname":"<WindowSettings>::get_maybe_graphics_api","value":"fn (&self) -> Option<Api>","parent":null,"children":[],"decl_id":null,"docs":" Gets the graphics API version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":20844,"byte_end":20866,"line_start":649,"line_end":649,"column_start":12,"column_end":34},"name":"set_maybe_graphics_api","qualname":"<WindowSettings>::set_maybe_graphics_api","value":"fn <V> (&mut self, value: Option<V>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets graphics API version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":21436,"byte_end":21454,"line_start":662,"line_end":662,"column_start":12,"column_end":30},"name":"maybe_graphics_api","qualname":"<WindowSettings>::maybe_graphics_api","value":"fn <V> (mut self, value: Option<V>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets graphics API version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":21796,"byte_end":21812,"line_start":671,"line_end":671,"column_start":12,"column_end":28},"name":"set_graphics_api","qualname":"<WindowSettings>::set_graphics_api","value":"fn <V> (&mut self, value: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets graphics API version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":22283,"byte_end":22295,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"graphics_api","qualname":"<WindowSettings>::graphics_api","value":"fn <V> (mut self, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the graphics API version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":22933,"byte_end":22941,"line_start":698,"line_end":698,"column_start":12,"column_end":20},"name":"get_srgb","qualname":"<WindowSettings>::get_srgb","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should use hardware accelerated color conversion.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":23186,"byte_end":23194,"line_start":706,"line_end":706,"column_start":12,"column_end":20},"name":"set_srgb","qualname":"<WindowSettings>::set_srgb","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use hardware accelerated color conversion.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":23616,"byte_end":23620,"line_start":718,"line_end":718,"column_start":12,"column_end":16},"name":"srgb","qualname":"<WindowSettings>::srgb","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use hardware accelerated color conversion.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":23771,"byte_end":23784,"line_start":724,"line_end":724,"column_start":12,"column_end":25},"name":"get_resizable","qualname":"<WindowSettings>::get_resizable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should be resizable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":23899,"byte_end":23912,"line_start":729,"line_end":729,"column_start":12,"column_end":25},"name":"set_resizable","qualname":"<WindowSettings>::set_resizable","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be resizable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":24214,"byte_end":24223,"line_start":738,"line_end":738,"column_start":12,"column_end":21},"name":"resizable","qualname":"<WindowSettings>::resizable","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be resizable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":24605,"byte_end":24618,"line_start":750,"line_end":750,"column_start":12,"column_end":25},"name":"get_decorated","qualname":"<WindowSettings>::get_decorated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should be decorated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":24959,"byte_end":24972,"line_start":761,"line_end":761,"column_start":12,"column_end":25},"name":"set_decorated","qualname":"<WindowSettings>::set_decorated","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be decorated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":25500,"byte_end":25509,"line_start":776,"line_end":776,"column_start":12,"column_end":21},"name":"decorated","qualname":"<WindowSettings>::decorated","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be decorated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":25679,"byte_end":25694,"line_start":782,"line_end":782,"column_start":12,"column_end":27},"name":"get_controllers","qualname":"<WindowSettings>::get_controllers","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should listen to controller input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":25825,"byte_end":25840,"line_start":787,"line_end":787,"column_start":12,"column_end":27},"name":"set_controllers","qualname":"<WindowSettings>::set_controllers","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should listen to controller input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":26162,"byte_end":26173,"line_start":796,"line_end":796,"column_start":12,"column_end":23},"name":"controllers","qualname":"<WindowSettings>::controllers","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether build windows should listen to controller input.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":27094,"byte_end":27102,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":27459,"byte_end":27467,"line_start":42,"line_end":42,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":28089,"byte_end":28097,"line_start":74,"line_end":74,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":28341,"byte_end":28349,"line_start":83,"line_end":83,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2140,"byte_end":2144,"line_start":62,"line_end":62,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2339,"byte_end":2343,"line_start":72,"line_end":72,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2526,"byte_end":2530,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2727,"byte_end":2731,"line_start":92,"line_end":92,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":4024,"byte_end":4032,"line_start":146,"line_end":146,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":4214,"byte_end":4222,"line_start":156,"line_end":156,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":13337,"byte_end":13351,"line_start":425,"line_end":425,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":27094,"byte_end":27102,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":27459,"byte_end":27467,"line_start":42,"line_end":42,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":0,"index":105}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":28089,"byte_end":28097,"line_start":74,"line_end":74,"column_start":34,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":32},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/no_window.rs","byte_start":28341,"byte_end":28349,"line_start":83,"line_end":83,"column_start":25,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":32},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2140,"byte_end":2144,"line_start":62,"line_end":62,"column_start":25,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2339,"byte_end":2343,"line_start":72,"line_end":72,"column_start":25,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2526,"byte_end":2530,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":2727,"byte_end":2731,"line_start":92,"line_end":92,"column_start":27,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":4024,"byte_end":4032,"line_start":146,"line_end":146,"column_start":25,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":200},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":4214,"byte_end":4222,"line_start":156,"line_end":156,"column_start":27,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":200},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":4977,"byte_end":4982,"line_start":186,"line_end":186,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":7519,"byte_end":7525,"line_start":253,"line_end":253,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":105},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":7528,"byte_end":7533,"line_start":253,"line_end":253,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":12277,"byte_end":12283,"line_start":390,"line_end":390,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":105},"to":{"krate":0,"index":135}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-window-0.44.0/src/lib.rs","byte_start":13337,"byte_end":13351,"line_start":425,"line_end":425,"column_start":6,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}}]}