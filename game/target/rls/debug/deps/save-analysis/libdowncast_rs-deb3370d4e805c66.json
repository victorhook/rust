{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1","program":"/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","downcast_rs","/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=deb3370d4e805c66","-C","extra-filename=-deb3370d4e805c66","--out-dir","/home/victor/coding/rust/game/target/rls/debug/deps","-L","dependency=/home/victor/coding/rust/game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/victor/coding/rust/game/target/rls/debug/deps/libdowncast_rs-deb3370d4e805c66.rmeta"},"prelude":{"crate_id":{"name":"downcast_rs","disambiguator":[1698642641506621962,17620021471374366886]},"crate_root":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src","external_crates":[{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}}],"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":0,"byte_end":25244,"line_start":1,"line_end":660,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":0,"byte_end":25244,"line_start":1,"line_end":660,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":29}],"decl_id":null,"docs":" Rust enums are great for types where all variations are known beforehand. But a\n container of user-defined types requires an open-ended type like a **trait\n object**. Some applications may want to cast these trait objects back to the\n original concrete types to access additional functionality and performant\n inlined implementations.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":4940,"byte_end":4948,"line_start":143,"line_end":143,"column_start":11,"column_end":19},"name":"Downcast","qualname":"::Downcast","value":"Downcast: Any","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Supports conversion to `Any`. Traits to be extended by `impl_downcast!` must extend `Downcast`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":5161,"byte_end":5169,"line_start":146,"line_end":146,"column_start":8,"column_end":16},"name":"into_any","qualname":"::Downcast::into_any","value":"fn (self: Box<Self>) -> Box<dyn Any>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Convert `Box<dyn Trait>` (where `Trait: Downcast`) to `Box<dyn Any>`. `Box<dyn Any>` can\n then be further `downcast` into `Box<ConcreteType>` where `ConcreteType` implements `Trait`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":5393,"byte_end":5404,"line_start":149,"line_end":149,"column_start":8,"column_end":19},"name":"into_any_rc","qualname":"::Downcast::into_any_rc","value":"fn (self: ::std::rc::Rc<Self>) -> ::std::rc::Rc<dyn Any>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Convert `Rc<Trait>` (where `Trait: Downcast`) to `Rc<Any>`. `Rc<Any>` can then be\n further `downcast` into `Rc<ConcreteType>` where `ConcreteType` implements `Trait`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":5611,"byte_end":5617,"line_start":152,"line_end":152,"column_start":8,"column_end":14},"name":"as_any","qualname":"::Downcast::as_any","value":"fn (&self) -> &dyn Any","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Convert `&Trait` (where `Trait: Downcast`) to `&Any`. This is needed since Rust cannot\n generate `&Any`'s vtable from `&Trait`'s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":5802,"byte_end":5812,"line_start":155,"line_end":155,"column_start":8,"column_end":18},"name":"as_any_mut","qualname":"::Downcast::as_any_mut","value":"fn (&mut self) -> &mut dyn Any","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Convert `&mut Trait` (where `Trait: Downcast`) to `&Any`. This is needed since Rust cannot\n generate `&mut Any`'s vtable from `&mut Trait`'s.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":6215,"byte_end":6227,"line_start":166,"line_end":166,"column_start":11,"column_end":23},"name":"DowncastSync","qualname":"::DowncastSync","value":"DowncastSync: Downcast + Send + Sync","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" Extends `Downcast` to support `Sync` traits that thus support `Arc` downcasting as well.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":6447,"byte_end":6459,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"into_any_arc","qualname":"::DowncastSync::into_any_arc","value":"fn (self: ::std::sync::Arc<Self>) -> ::std::sync::Arc<dyn Any + Send + Sync>","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Convert `Arc<Trait>` (where `Trait: Downcast`) to `Arc<Any>`. `Arc<Any>` can then be\n further `downcast` into `Arc<ConcreteType>` where `ConcreteType` implements `Trait`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":5870,"byte_end":5871,"line_start":158,"line_end":158,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":6581,"byte_end":6582,"line_start":172,"line_end":172,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":4950,"byte_end":4953,"line_start":143,"line_end":143,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2309},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":5870,"byte_end":5871,"line_start":158,"line_end":158,"column_start":27,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":6229,"byte_end":6237,"line_start":166,"line_end":166,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":13},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":6240,"byte_end":6244,"line_start":166,"line_end":166,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":6247,"byte_end":6251,"line_start":166,"line_end":166,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/downcast-rs-1.1.1/src/lib.rs","byte_start":6581,"byte_end":6582,"line_start":172,"line_end":172,"column_start":45,"column_end":46},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":0,"index":24}}]}