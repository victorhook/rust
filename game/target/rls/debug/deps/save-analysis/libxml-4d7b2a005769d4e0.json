{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0","program":"/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","xml","/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=4d7b2a005769d4e0","-C","extra-filename=-4d7b2a005769d4e0","--out-dir","/home/victor/coding/rust/game/target/rls/debug/deps","-L","dependency=/home/victor/coding/rust/game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/victor/coding/rust/game/target/rls/debug/deps/libxml-4d7b2a005769d4e0.rmeta"},"prelude":{"crate_id":{"name":"xml","disambiguator":[12081975831374406628,12257603811404091513]},"crate_root":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src","external_crates":[{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}}],"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":24,"byte_end":448,"line_start":2,"line_end":21,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":635},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":203,"byte_end":214,"line_start":8,"line_end":8,"column_start":17,"column_end":28},"alias_span":null,"name":"EventReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":232,"byte_end":244,"line_start":9,"line_end":9,"column_start":17,"column_end":29},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":262,"byte_end":273,"line_start":10,"line_end":10,"column_start":17,"column_end":28},"alias_span":null,"name":"EventWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1322},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":291,"byte_end":304,"line_start":11,"line_end":11,"column_start":17,"column_end":30},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":37869,"byte_end":37881,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":37905,"byte_end":37913,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":1280},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38028,"byte_end":38033,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38035,"byte_end":38044,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140511,"byte_end":140517,"line_start":6,"line_end":6,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":671}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140542,"byte_end":140554,"line_start":7,"line_end":7,"column_start":24,"column_end":36},"alias_span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140558,"byte_end":140563,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"name":"Error","value":"","parent":{"krate":0,"index":671}},{"kind":"Use","ref_id":{"krate":0,"index":1322},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140587,"byte_end":140600,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":671}},{"kind":"Use","ref_id":{"krate":0,"index":1359},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140624,"byte_end":140632,"line_start":9,"line_end":9,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":671}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":24,"byte_end":448,"line_start":2,"line_end":21,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":76},{"krate":0,"index":95},{"krate":0,"index":118},{"krate":0,"index":150},{"krate":0,"index":252},{"krate":0,"index":671},{"krate":0,"index":839}],"decl_id":null,"docs":" This crate currently provides an almost XML 1.0/1.1-compliant pull parser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":24,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(unused_variables)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":45,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"forbid(non_camel_case_types)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":73,"byte_end":105,"line_start":4,"line_end":4,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/macros.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" Contains several macros used in this crate.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/macros.rs","byte_start":450,"byte_end":463,"line_start":1,"line_end":1,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":856},{"krate":0,"index":878},{"krate":0,"index":875},{"krate":0,"index":871},{"krate":0,"index":868},{"krate":0,"index":864},{"krate":0,"index":861},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":43},{"krate":0,"index":48},{"krate":0,"index":880},{"krate":0,"index":894},{"krate":0,"index":891},{"krate":0,"index":889},{"krate":0,"index":886},{"krate":0,"index":884},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":69},{"krate":0,"index":72}],"decl_id":null,"docs":" Contains XML qualified names manipulation types and functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":856},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":3346,"byte_end":3350,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Name","qualname":"::name::Name","value":"Name { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"decl_id":null,"docs":" Represents a qualified XML name.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":3418,"byte_end":3428,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::Name::local_name","value":"&'a str","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":859},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":3511,"byte_end":3520,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::Name::namespace","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":860},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":3599,"byte_end":3605,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::Name::prefix","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4562,"byte_end":4570,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Name>::to_owned","value":"fn (&self) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned variant of the qualified name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4879,"byte_end":4884,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"local","qualname":"<Name>::local","value":"fn (local_name: &str) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing plain local name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4858,"byte_end":4867,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":5124,"byte_end":5132,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"prefixed","qualname":"<Name>::prefixed","value":"fn (local_name: &'a str, prefix: &'a str) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance with the given local name and prefix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":5103,"byte_end":5112,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":5455,"byte_end":5464,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"qualified","qualname":"<Name>::qualified","value":"fn (local_name: &'a str, namespace: &'a str, prefix: Option<&'a str>) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing a qualified name with or without a prefix and\n with a namespace URI.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":5434,"byte_end":5443,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":5893,"byte_end":5900,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"to_repr","qualname":"<Name>::to_repr","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a correct XML representation of this local name and prefix.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":6233,"byte_end":6245,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"repr_display","qualname":"<Name>::repr_display","value":"fn (&self) -> ReprDisplay","parent":null,"children":[],"decl_id":null,"docs":" Returns a structure which can be displayed with `std::fmt` machinery to obtain this\n local name and prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":6212,"byte_end":6221,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":6412,"byte_end":6423,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"prefix_repr","qualname":"<Name>::prefix_repr","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":6391,"byte_end":6400,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":6631,"byte_end":6642,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"ReprDisplay","qualname":"::name::ReprDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is\n displayed in an XML document.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7118,"byte_end":7127,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"OwnedName","qualname":"::name::OwnedName","value":"OwnedName { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"decl_id":null,"docs":" An owned variant of `Name`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":881},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7191,"byte_end":7201,"line_start":175,"line_end":175,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::OwnedName::local_name","value":"std::string::String","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":882},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7283,"byte_end":7292,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::OwnedName::namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":883},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7370,"byte_end":7376,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::OwnedName::prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7649,"byte_end":7655,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedName>::borrow","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Constructs a borrowed `Name` based on this owned name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7967,"byte_end":7972,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"local","qualname":"<OwnedName>::local","value":"fn <S> (local_name: S) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a plain local name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7946,"byte_end":7955,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":8320,"byte_end":8329,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"qualified","qualname":"<OwnedName>::qualified","value":"fn <S1, S2, S3> (local_name: S1, namespace: S2, prefix: Option<S3>) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a qualified name with or without\n a prefix and with a namespace URI.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":8299,"byte_end":8308,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":8793,"byte_end":8803,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"prefix_ref","qualname":"<OwnedName>::prefix_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":8772,"byte_end":8781,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":9026,"byte_end":9039,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"namespace_ref","qualname":"<OwnedName>::namespace_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":9005,"byte_end":9014,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attribute","qualname":"::attribute","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":896},{"krate":0,"index":917},{"krate":0,"index":914},{"krate":0,"index":911},{"krate":0,"index":907},{"krate":0,"index":903},{"krate":0,"index":900},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":919},{"krate":0,"index":932},{"krate":0,"index":930},{"krate":0,"index":927},{"krate":0,"index":924},{"krate":0,"index":922},{"krate":0,"index":89},{"krate":0,"index":93}],"decl_id":null,"docs":" Contains XML attributes manipulation types and functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":896},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11516,"byte_end":11525,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::attribute::Attribute","value":"Attribute { name, value }","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" A borrowed version of an XML attribute.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":898},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11564,"byte_end":11568,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::Attribute::name","value":"name::Name<'a>","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":899},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11614,"byte_end":11619,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::Attribute::value","value":"&'a str","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11929,"byte_end":11937,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Attribute>::to_owned","value":"fn (&self) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned attribute out of this borrowed one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11908,"byte_end":11917,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12205,"byte_end":12208,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"fn (name: Name<'a>, value: &'a str) -> Attribute<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a borrowed attribute using the provided borrowed name and a borrowed string value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12184,"byte_end":12193,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":919},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12473,"byte_end":12487,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"OwnedAttribute","qualname":"::attribute::OwnedAttribute","value":"OwnedAttribute { name, value }","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"decl_id":null,"docs":" An owned version of an XML attribute.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":920},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12522,"byte_end":12526,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::OwnedAttribute::name","value":"name::OwnedName","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":921},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12573,"byte_end":12578,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::OwnedAttribute::value","value":"std::string::String","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12685,"byte_end":12691,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedAttribute>::borrow","value":"fn (&self) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed `Attribute` out of this owned one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12942,"byte_end":12945,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedAttribute>::new","value":"fn <S> (name: OwnedName, value: S) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owned attribute using the provided owned name and an owned string value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12921,"byte_end":12930,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":934},{"krate":0,"index":944},{"krate":0,"index":942},{"krate":0,"index":939},{"krate":0,"index":937},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":945},{"krate":0,"index":956},{"krate":0,"index":954},{"krate":0,"index":952},{"krate":0,"index":950},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Contains common types and functions used throughout the library.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":13942,"byte_end":13954,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"TextPosition","qualname":"::common::TextPosition","value":"TextPosition { row, column }","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"decl_id":null,"docs":" Represents a position inside some textual document.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":935},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":13994,"byte_end":13997,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"row","qualname":"::common::TextPosition::row","value":"u64","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Row, counting from 0\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":936},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14044,"byte_end":14050,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"column","qualname":"::common::TextPosition::column","value":"u64","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Column, counting from 0\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14181,"byte_end":14184,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<TextPosition>::new","value":"fn () -> TextPosition","parent":null,"children":[],"decl_id":null,"docs":" Creates a new position initialized to the beginning of the document\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14160,"byte_end":14169,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14320,"byte_end":14327,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"advance","qualname":"<TextPosition>::advance","value":"fn (&mut self, count: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14299,"byte_end":14308,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14486,"byte_end":14500,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"advance_to_tab","qualname":"<TextPosition>::advance_to_tab","value":"fn (&mut self, width: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line to the next tab position\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14465,"byte_end":14474,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14706,"byte_end":14714,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"new_line","qualname":"<TextPosition>::new_line","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position to the beginning of the next line\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14685,"byte_end":14694,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15277,"byte_end":15285,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Position","qualname":"::common::Position","value":"Position","parent":null,"children":[{"krate":0,"index":107}],"decl_id":null,"docs":" Get the position in the document corresponding to the object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15375,"byte_end":15383,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"position","qualname":"::common::Position::position","value":"fn (&self) -> TextPosition","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Returns the current position or a position corresponding to the object.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15640,"byte_end":15649,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"Version10","qualname":"::common::XmlVersion::Version10","value":"XmlVersion::Version10","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" XML version 1.0.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":948},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15681,"byte_end":15690,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Version11","qualname":"::common::XmlVersion::Version11","value":"XmlVersion::Version11","parent":{"krate":0,"index":945},"children":[],"decl_id":null,"docs":" XML version 1.1.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":945},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15598,"byte_end":15608,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"XmlVersion","qualname":"::common::XmlVersion","value":"XmlVersion::{Version10, Version11}","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":948}],"decl_id":null,"docs":" XML version enumeration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":16289,"byte_end":16307,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"is_whitespace_char","qualname":"::common::is_whitespace_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a white space character (`S`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":16597,"byte_end":16614,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"is_whitespace_str","qualname":"::common::is_whitespace_str","value":"fn (s: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given string is compound only by white space\n characters (`S`) using the previous is_whitespace_char to check\n all characters of this string\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":16901,"byte_end":16919,"line_start":118,"line_end":118,"column_start":8,"column_end":26},"name":"is_name_start_char","qualname":"::common::is_name_start_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name start character (`NameStartChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":17595,"byte_end":17607,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"is_name_char","qualname":"::common::is_name_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name character (`NameChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"escape","qualname":"::escape","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Contains functions for performing XML special characters escaping.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":20380,"byte_end":20400,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"escape_str_attribute","qualname":"::escape::escape_str_attribute","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside an attribute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":20363,"byte_end":20372,"line_start":93,"line_end":93,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":20900,"byte_end":20917,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"escape_str_pcdata","qualname":"::escape::escape_str_pcdata","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside PCDATA.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":20883,"byte_end":20892,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"namespace","qualname":"::namespace","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":957},{"krate":0,"index":966},{"krate":0,"index":964},{"krate":0,"index":962},{"krate":0,"index":960},{"krate":0,"index":166},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":969},{"krate":0,"index":979},{"krate":0,"index":977},{"krate":0,"index":974},{"krate":0,"index":972},{"krate":0,"index":193},{"krate":0,"index":215},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":247}],"decl_id":null,"docs":" Contains namespace manipulation types and functions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":160},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":21722,"byte_end":21737,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"NS_XMLNS_PREFIX","qualname":"::namespace::NS_XMLNS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for namespace definitions.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":161},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":21956,"byte_end":21968,"line_start":21,"line_end":21,"column_start":11,"column_end":23},"name":"NS_XMLNS_URI","qualname":"::namespace::NS_XMLNS_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xmlns` prefix.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":162},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":22479,"byte_end":22492,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"NS_XML_PREFIX","qualname":"::namespace::NS_XML_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for a namespace containing several special predefined attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":163},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":22643,"byte_end":22653,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"NS_XML_URI","qualname":"::namespace::NS_XML_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xml` prefix.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":164},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":23431,"byte_end":23443,"line_start":55,"line_end":55,"column_start":11,"column_end":23},"name":"NS_NO_PREFIX","qualname":"::namespace::NS_NO_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the absence of prefix in a qualified name.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":165},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":23881,"byte_end":23893,"line_start":63,"line_end":63,"column_start":11,"column_end":23},"name":"NS_EMPTY_URI","qualname":"::namespace::NS_EMPTY_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates an empty namespace URI, which is equivalent to absence of namespace.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":957},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24109,"byte_end":24118,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"Namespace","qualname":"::namespace::Namespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace is a map from prefixes to namespace URIs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24229,"byte_end":24234,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"empty","qualname":"<Namespace>::empty","value":"fn () -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24208,"byte_end":24217,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24355,"byte_end":24363,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Namespace>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24334,"byte_end":24343,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24553,"byte_end":24573,"line_start":84,"line_end":84,"column_start":12,"column_end":32},"name":"is_essentially_empty","qualname":"<Namespace>::is_essentially_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is essentially empty, that is, it does not contain\n anything but default mappings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":25241,"byte_end":25249,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"contains","qualname":"<Namespace>::contains","value":"fn <P> (&self, prefix: &P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace mapping contains the given prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":25220,"byte_end":25229,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":25863,"byte_end":25866,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"put","qualname":"<Namespace>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":26714,"byte_end":26723,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"force_put","qualname":"<Namespace>::force_put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace forcefully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":27126,"byte_end":27129,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"get","qualname":"<Namespace>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Queries the namespace for the given prefix.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":183},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":27347,"byte_end":27364,"line_start":166,"line_end":166,"column_start":10,"column_end":27},"name":"NamespaceMappings","qualname":"::namespace::NamespaceMappings","value":"Map<Entries<'a, String, String>,\n    for<'b>fn((&'b String, &'b String)) -> UriMapping<'b>>","parent":null,"children":[],"decl_id":null,"docs":" An alias for iterator type for namespace mappings contained in a namespace.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28024,"byte_end":28038,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"NamespaceStack","qualname":"::namespace::NamespaceStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace stack is a sequence of namespaces.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28150,"byte_end":28155,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"empty","qualname":"<NamespaceStack>::empty","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28129,"byte_end":28138,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28476,"byte_end":28483,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"default","qualname":"<NamespaceStack>::default","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns a namespace stack with default items in it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28455,"byte_end":28464,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28897,"byte_end":28907,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"push_empty","qualname":"<NamespaceStack>::push_empty","value":"fn (&mut self) -> &mut NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Adds an empty namespace to the top of this stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28876,"byte_end":28885,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29129,"byte_end":29132,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"pop","qualname":"<NamespaceStack>::pop","value":"fn (&mut self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29108,"byte_end":29117,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29365,"byte_end":29372,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"try_pop","qualname":"<NamespaceStack>::try_pop","value":"fn (&mut self) -> Option<Namespace>","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29344,"byte_end":29353,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29579,"byte_end":29587,"line_start":241,"line_end":241,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<NamespaceStack>::peek_mut","value":"fn (&mut self) -> &mut Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace mutably, leaving the stack intact.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29558,"byte_end":29567,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29807,"byte_end":29811,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"peek","qualname":"<NamespaceStack>::peek","value":"fn (&self) -> &Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace immutably, leaving the stack intact.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":29786,"byte_end":29795,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":30531,"byte_end":30542,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"put_checked","qualname":"<NamespaceStack>::put_checked","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace if this stack does not already contain one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":31575,"byte_end":31578,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"put","qualname":"<NamespaceStack>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":31554,"byte_end":31563,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":32099,"byte_end":32102,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"get","qualname":"<NamespaceStack>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Performs a search for the given prefix in the whole stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":32078,"byte_end":32087,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":32610,"byte_end":32616,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"squash","qualname":"<NamespaceStack>::squash","value":"fn (&self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Combines this stack of namespaces into a single namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":33012,"byte_end":33026,"line_start":336,"line_end":336,"column_start":12,"column_end":26},"name":"checked_target","qualname":"<NamespaceStack>::checked_target","value":"fn (&mut self) -> CheckedTarget","parent":null,"children":[],"decl_id":null,"docs":" Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":32991,"byte_end":33000,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":33188,"byte_end":33192,"line_start":342,"line_end":342,"column_start":12,"column_end":16},"name":"iter","qualname":"<NamespaceStack>::iter","value":"fn (&self) -> NamespaceStackMappings","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all mappings in this namespace stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":33167,"byte_end":33176,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":33697,"byte_end":33719,"line_start":361,"line_end":361,"column_start":12,"column_end":34},"name":"NamespaceStackMappings","qualname":"::namespace::NamespaceStackMappings","value":"NamespaceStackMappings {  }","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" An iterator over mappings from prefixes to URIs in a namespace stack.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":35697,"byte_end":35707,"line_start":421,"line_end":421,"column_start":10,"column_end":20},"name":"UriMapping","qualname":"::namespace::UriMapping","value":"(&'a str, &'a str)","parent":null,"children":[],"decl_id":null,"docs":" A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":37282,"byte_end":37295,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"CheckedTarget","qualname":"::namespace::CheckedTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":361},{"krate":0,"index":565},{"krate":0,"index":578},{"krate":0,"index":592},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":639},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":655},{"krate":0,"index":659},{"krate":0,"index":664},{"krate":0,"index":668}],"decl_id":null,"docs":" Contains high-level interface for a pull-based XML parser.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1203},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":122257,"byte_end":122269,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ParserConfig","qualname":"::reader::config::ParserConfig","value":"ParserConfig { trim_whitespace, whitespace_to_characters, cdata_to_characters, ignore_comments, coalesce_characters, extra_entities, ignore_end_of_stream }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210}],"decl_id":null,"docs":" Parser configuration structure.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":122972,"byte_end":122987,"line_start":24,"line_end":24,"column_start":9,"column_end":24},"name":"trim_whitespace","qualname":"::reader::config::ParserConfig::trim_whitespace","value":"bool","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Whether or not should whitespace in textual events be removed. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":123337,"byte_end":123361,"line_start":32,"line_end":32,"column_start":9,"column_end":33},"name":"whitespace_to_characters","qualname":"::reader::config::ParserConfig::whitespace_to_characters","value":"bool","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Whether or not should whitespace be converted to characters.\n Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":123768,"byte_end":123787,"line_start":41,"line_end":41,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::reader::config::ParserConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Whether or not should CDATA be converted to characters.\n Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":123942,"byte_end":123957,"line_start":46,"line_end":46,"column_start":9,"column_end":24},"name":"ignore_comments","qualname":"::reader::config::ParserConfig::ignore_comments","value":"bool","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Whether or not should comments be omitted. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1208},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":124443,"byte_end":124462,"line_start":57,"line_end":57,"column_start":9,"column_end":28},"name":"coalesce_characters","qualname":"::reader::config::ParserConfig::coalesce_characters","value":"bool","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Whether or not should sequential `Characters` events be merged.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":124888,"byte_end":124902,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"extra_entities","qualname":"::reader::config::ParserConfig::extra_entities","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" A map of extra entities recognized by the parser. Default is an empty map.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":125661,"byte_end":125681,"line_start":77,"line_end":77,"column_start":9,"column_end":29},"name":"ignore_end_of_stream","qualname":"::reader::config::ParserConfig::ignore_end_of_stream","value":"bool","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Whether or not the parser should ignore the end of stream. Default is false.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":126080,"byte_end":126083,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserConfig>::new","value":"fn () -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Returns a new config with default values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":127061,"byte_end":127074,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"create_reader","qualname":"<ParserConfig>::create_reader","value":"fn <R> (self, source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader with this configuration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":127040,"byte_end":127049,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":127709,"byte_end":127719,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"add_entity","qualname":"<ParserConfig>::add_entity","value":"fn <S, T> (mut self, entity: S, value: T) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Adds a new entity mapping and returns an updated config object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":128041,"byte_end":128056,"line_start":158,"line_end":158,"column_start":5,"column_end":20},"name":"trim_whitespace","qualname":"<ParserConfig>::trim_whitespace","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":128072,"byte_end":128096,"line_start":159,"line_end":159,"column_start":5,"column_end":29},"name":"whitespace_to_characters","qualname":"<ParserConfig>::whitespace_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":128112,"byte_end":128131,"line_start":160,"line_end":160,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<ParserConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":128147,"byte_end":128162,"line_start":161,"line_end":161,"column_start":5,"column_end":20},"name":"ignore_comments","qualname":"<ParserConfig>::ignore_comments","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":128178,"byte_end":128197,"line_start":162,"line_end":162,"column_start":5,"column_end":24},"name":"coalesce_characters","qualname":"<ParserConfig>::coalesce_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":128213,"byte_end":128233,"line_start":163,"line_end":163,"column_start":5,"column_end":25},"name":"ignore_end_of_stream","qualname":"<ParserConfig>::ignore_end_of_stream","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1233},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":128889,"byte_end":128902,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::reader::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":129860,"byte_end":129871,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"EndDocument","qualname":"::reader::events::XmlEvent::EndDocument","value":"XmlEvent::EndDocument","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes to the end of the document stream.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1239},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":130074,"byte_end":130095,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::reader::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1242},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":130460,"byte_end":130472,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::reader::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1246},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":131084,"byte_end":131094,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::reader::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":131463,"byte_end":131468,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"CData","qualname":"::reader::events::XmlEvent::CData","value":"XmlEvent::CData(String)","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":131692,"byte_end":131699,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Comment","qualname":"::reader::events::XmlEvent::Comment","value":"XmlEvent::Comment(String)","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1254},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":132085,"byte_end":132095,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"Characters","qualname":"::reader::events::XmlEvent::Characters","value":"XmlEvent::Characters(String)","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":132464,"byte_end":132474,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::reader::events::XmlEvent::Whitespace","value":"XmlEvent::Whitespace(String)","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Denotes a chunk of whitespace outside of tags.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1232},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":128671,"byte_end":128679,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::reader::events::XmlEvent","value":"XmlEvent::{StartDocument, EndDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters, Whitespace}","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257}],"decl_id":null,"docs":" An element of an XML input stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":135578,"byte_end":135593,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"as_writer_event","qualname":"<XmlEvent>::as_writer_event","value":"fn <'a> (&'a self) -> Option<::writer::events::XmlEvent<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a writer event from this reader event.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137288,"byte_end":137294,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::reader::error::ErrorKind::Syntax","value":"ErrorKind::Syntax(Cow<'static, str>)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1270},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137319,"byte_end":137321,"line_start":14,"line_end":14,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137338,"byte_end":137342,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::reader::error::ErrorKind::Utf8","value":"ErrorKind::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1276},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137364,"byte_end":137377,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::reader::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1266},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137272,"byte_end":137281,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::reader::error::ErrorKind","value":"ErrorKind::{Syntax, Io, Utf8, UnexpectedEof}","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1280},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137550,"byte_end":137555,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"decl_id":null,"docs":" An XML parsing error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137964,"byte_end":137967,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a message which is contained inside this error.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137943,"byte_end":137952,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":138284,"byte_end":138288,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":633},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38099,"byte_end":38105,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlReader`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":635},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38237,"byte_end":38248,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"EventReader","qualname":"::reader::EventReader","value":"EventReader {  }","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638}],"decl_id":null,"docs":" A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38415,"byte_end":38418,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<EventReader<R>>::new","value":"fn (source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader, consuming the given stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38394,"byte_end":38403,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38637,"byte_end":38652,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventReader<R>>::new_with_config","value":"fn (source: R, config: ParserConfig) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader with the provded configuration, consuming the given stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38616,"byte_end":38625,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39023,"byte_end":39027,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"next","qualname":"<EventReader<R>>::next","value":"fn (&mut self) -> Result<XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Pulls and returns next XML event from the stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39002,"byte_end":39011,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39122,"byte_end":39128,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"source","qualname":"<EventReader<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39170,"byte_end":39180,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<EventReader<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39538,"byte_end":39548,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventReader`, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":655},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40270,"byte_end":40276,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"Events","qualname":"::reader::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658}],"decl_id":null,"docs":" An iterator over XML events created from some type implementing `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40457,"byte_end":40467,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Events<R>>::into_inner","value":"fn (self) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the iterator, returning the internal `EventReader`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40436,"byte_end":40445,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40532,"byte_end":40538,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"source","qualname":"<Events<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40587,"byte_end":40597,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<Events<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":41243,"byte_end":41251,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"from_str","qualname":"<EventReader<&'r [u8]>>::from_str","value":"fn (source: &'r str) -> EventReader<&'r [u8]>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to create an `XmlReader` from a string slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":41222,"byte_end":41231,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":671},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":769},{"krate":0,"index":779},{"krate":0,"index":826},{"krate":0,"index":830}],"decl_id":null,"docs":" Contains high-level interface for an events-based XML emitter.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1293},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":144668,"byte_end":144670,"line_start":21,"line_end":21,"column_start":5,"column_end":7},"name":"Io","qualname":"::writer::emitter::EmitterError::Io","value":"EmitterError::Io(io::Error)","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" An I/O error occured in the underlying `Write` instance.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1296},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":144764,"byte_end":144791,"line_start":24,"line_end":24,"column_start":5,"column_end":32},"name":"DocumentStartAlreadyEmitted","qualname":"::writer::emitter::EmitterError::DocumentStartAlreadyEmitted","value":"EmitterError::DocumentStartAlreadyEmitted","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" Document declaration has already been written to the output stream.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":144861,"byte_end":144888,"line_start":27,"line_end":27,"column_start":5,"column_end":32},"name":"LastElementNameNotAvailable","qualname":"::writer::emitter::EmitterError::LastElementNameNotAvailable","value":"EmitterError::LastElementNameNotAvailable","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The name of the last opening element is not available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145006,"byte_end":145052,"line_start":31,"line_end":31,"column_start":5,"column_end":51},"name":"EndElementNameIsNotEqualToLastStartElementName","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotEqualToLastStartElementName","value":"EmitterError::EndElementNameIsNotEqualToLastStartElementName","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The name of the last opening element is not equal to the name of the provided\n closing element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145197,"byte_end":145225,"line_start":35,"line_end":35,"column_start":5,"column_end":33},"name":"EndElementNameIsNotSpecified","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotSpecified","value":"EmitterError::EndElementNameIsNotSpecified","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" End element name is not specified when it is needed, for example, when automatic\n closing is not enabled in configuration.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1292},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":144584,"byte_end":144596,"line_start":19,"line_end":19,"column_start":10,"column_end":22},"name":"EmitterError","qualname":"::writer::emitter::EmitterError","value":"EmitterError::{Io, DocumentStartAlreadyEmitted, LastElementNameNotAvailable, EndElementNameIsNotEqualToLastStartElementName, EndElementNameIsNotSpecified}","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302}],"decl_id":null,"docs":" An error which may be returned by `XmlWriter` when writing XML events.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":708},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":146467,"byte_end":146473,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Result","qualname":"::writer::emitter::Result","value":"result::Result<T, EmitterError>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlWriter`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":158382,"byte_end":158395,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"EmitterConfig","qualname":"::writer::config::EmitterConfig","value":"EmitterConfig { line_separator, indent_string, perform_indent, perform_escaping, write_document_declaration, normalize_empty_elements, cdata_to_characters, keep_element_names_stack, autopad_comments }","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"decl_id":null,"docs":" Emitter configuration structure.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1323},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":158492,"byte_end":158506,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"name":"line_separator","qualname":"::writer::config::EmitterConfig::line_separator","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Line separator used to separate lines in formatted output. Default is `\"\\n\"`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":158647,"byte_end":158660,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"indent_string","qualname":"::writer::config::EmitterConfig::indent_string","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" A string which will be used for a single level of indentation. Default is `\"  \"`\n (two spaces).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":159258,"byte_end":159272,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"name":"perform_indent","qualname":"::writer::config::EmitterConfig::perform_indent","value":"bool","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Whether or not the emitted document should be indented. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":159861,"byte_end":159877,"line_start":40,"line_end":40,"column_start":9,"column_end":25},"name":"perform_escaping","qualname":"::writer::config::EmitterConfig::perform_escaping","value":"bool","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Whether or not characters in output events will be escaped. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1327},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":160197,"byte_end":160223,"line_start":47,"line_end":47,"column_start":9,"column_end":35},"name":"write_document_declaration","qualname":"::writer::config::EmitterConfig::write_document_declaration","value":"bool","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Whether or not to write XML document declaration at the beginning of a document.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":160478,"byte_end":160502,"line_start":53,"line_end":53,"column_start":9,"column_end":33},"name":"normalize_empty_elements","qualname":"::writer::config::EmitterConfig::normalize_empty_elements","value":"bool","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Whether or not to convert elements with empty content to empty elements. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1329},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":160878,"byte_end":160897,"line_start":60,"line_end":60,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::writer::config::EmitterConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Whether or not to emit CDATA events as plain characters. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1330},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":161234,"byte_end":161258,"line_start":67,"line_end":67,"column_start":9,"column_end":33},"name":"keep_element_names_stack","qualname":"::writer::config::EmitterConfig::keep_element_names_stack","value":"bool","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Whether or not to keep element names to support `EndElement` events without explicit names.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1331},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":161635,"byte_end":161651,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"autopad_comments","qualname":"::writer::config::EmitterConfig::autopad_comments","value":"bool","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert leading and trailing spaces in emitted comments,\n if necessary. Default is true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":162085,"byte_end":162088,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<EmitterConfig>::new","value":"fn () -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Creates an emitter configuration with default values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":162064,"byte_end":162073,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163178,"byte_end":163191,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"create_writer","qualname":"<EmitterConfig>::create_writer","value":"fn <W> (self, sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML writer with this configuration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163157,"byte_end":163166,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163448,"byte_end":163462,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"line_separator","qualname":"<EmitterConfig>::line_separator","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163492,"byte_end":163505,"line_start":139,"line_end":139,"column_start":5,"column_end":18},"name":"indent_string","qualname":"<EmitterConfig>::indent_string","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163535,"byte_end":163549,"line_start":140,"line_end":140,"column_start":5,"column_end":19},"name":"perform_indent","qualname":"<EmitterConfig>::perform_indent","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163565,"byte_end":163591,"line_start":141,"line_end":141,"column_start":5,"column_end":31},"name":"write_document_declaration","qualname":"<EmitterConfig>::write_document_declaration","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163607,"byte_end":163631,"line_start":142,"line_end":142,"column_start":5,"column_end":29},"name":"normalize_empty_elements","qualname":"<EmitterConfig>::normalize_empty_elements","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163647,"byte_end":163666,"line_start":143,"line_end":143,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<EmitterConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163682,"byte_end":163706,"line_start":144,"line_end":144,"column_start":5,"column_end":29},"name":"keep_element_names_stack","qualname":"<EmitterConfig>::keep_element_names_stack","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163722,"byte_end":163738,"line_start":145,"line_end":145,"column_start":5,"column_end":21},"name":"autopad_comments","qualname":"<EmitterConfig>::autopad_comments","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":779},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::writer::events","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":1359},{"krate":0,"index":1383},{"krate":0,"index":787},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":814},{"krate":0,"index":823}],"decl_id":null,"docs":" Contains `XmlEvent` datatype, instances of which are consumed by the writer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1361},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":164475,"byte_end":164488,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::writer::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1365},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":164907,"byte_end":164928,"line_start":39,"line_end":39,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::writer::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1368},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":165131,"byte_end":165143,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::writer::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1372},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":165982,"byte_end":165992,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::writer::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1374},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":166478,"byte_end":166483,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"CData","qualname":"::writer::events::XmlEvent::CData","value":"XmlEvent::CData(&'a str)","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":166649,"byte_end":166656,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"Comment","qualname":"::writer::events::XmlEvent::Comment","value":"XmlEvent::Comment(&'a str)","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1380},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":166903,"byte_end":166913,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"Characters","qualname":"::writer::events::XmlEvent::Characters","value":"XmlEvent::Characters(&'a str)","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1359},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":164148,"byte_end":164156,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::writer::events::XmlEvent","value":"XmlEvent::{StartDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters}","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380}],"decl_id":null,"docs":" A part of an XML output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":167037,"byte_end":167059,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"processing_instruction","qualname":"<XmlEvent>::processing_instruction","value":"fn (name: &'a str, data: Option<&'a str>) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns an writer event for a processing instruction.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":167016,"byte_end":167025,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":167379,"byte_end":167392,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"start_element","qualname":"<XmlEvent>::start_element","value":"fn <S> (name: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for a starting element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":167358,"byte_end":167367,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":167977,"byte_end":167988,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"end_element","qualname":"<XmlEvent>::end_element","value":"fn () -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for an closing element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":167956,"byte_end":167965,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168266,"byte_end":168271,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"cdata","qualname":"<XmlEvent>::cdata","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a CDATA event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168245,"byte_end":168254,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168506,"byte_end":168516,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"characters","qualname":"<XmlEvent>::characters","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a regular characters (PCDATA) event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168485,"byte_end":168494,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168638,"byte_end":168645,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"comment","qualname":"<XmlEvent>::comment","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a comment event.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168617,"byte_end":168626,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":799},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168846,"byte_end":168863,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"EndElementBuilder","qualname":"::writer::events::EndElementBuilder","value":"EndElementBuilder {  }","parent":null,"children":[{"krate":0,"index":801}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":169385,"byte_end":169389,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"name","qualname":"<EndElementBuilder>::name","value":"fn <N> (mut self, name: N) -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of this closing element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":169364,"byte_end":169373,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":809},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":169746,"byte_end":169765,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"StartElementBuilder","qualname":"::writer::events::StartElementBuilder","value":"StartElementBuilder {  }","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" A builder for a starting element event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":170527,"byte_end":170531,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"attr","qualname":"<StartElementBuilder>::attr","value":"fn <N> (mut self, name: N, value: &'a str) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets an attribute value of this element to the given string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":170506,"byte_end":170515,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":171430,"byte_end":171432,"line_start":213,"line_end":213,"column_start":12,"column_end":14},"name":"ns","qualname":"<StartElementBuilder>::ns","value":"fn <S1, S2> (mut self, prefix: S1, uri: S2) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a namespace to the current namespace context.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":171409,"byte_end":171418,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":171806,"byte_end":171816,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"default_ns","qualname":"<StartElementBuilder>::default_ns","value":"fn <S> (mut self, uri: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a default namespace mapping to the current namespace context.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":171785,"byte_end":171794,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140852,"byte_end":140863,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"EventWriter","qualname":"::writer::EventWriter","value":"EventWriter {  }","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"decl_id":null,"docs":" A wrapper around an `std::io::Write` instance which emits XML document according to provided\n events.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":141076,"byte_end":141079,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<EventWriter<W>>::new","value":"fn (sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the default\n configuration.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":141055,"byte_end":141064,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":141320,"byte_end":141335,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventWriter<W>>::new_with_config","value":"fn (sink: W, config: EmitterConfig) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the provided\n configuration.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":141299,"byte_end":141308,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":141957,"byte_end":141962,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"write","qualname":"<EventWriter<W>>::write","value":"fn <'a, E> (&mut self, event: E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next piece of XML document according to the provided event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":143645,"byte_end":143654,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<EventWriter<W>>::inner_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying `Writer`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":144041,"byte_end":144051,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventWriter`, returning the underlying writer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172377,"byte_end":172390,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::util::CharReadError::UnexpectedEof","value":"CharReadError::UnexpectedEof","parent":{"krate":0,"index":1386},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1389},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172396,"byte_end":172400,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::util::CharReadError::Utf8","value":"CharReadError::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1386},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1392},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172422,"byte_end":172424,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"Io","qualname":"::util::CharReadError::Io","value":"CharReadError::Io(io::Error)","parent":{"krate":0,"index":1386},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1386},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172357,"byte_end":172370,"line_start":6,"line_end":6,"column_start":10,"column_end":23},"name":"CharReadError","qualname":"::util::CharReadError","value":"CharReadError::{UnexpectedEof, Utf8, Io}","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1392}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":3653,"byte_end":3657,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4010,"byte_end":4014,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4155,"byte_end":4159,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4484,"byte_end":4488,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":6703,"byte_end":6714,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7419,"byte_end":7428,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7563,"byte_end":7572,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":9148,"byte_end":9157,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":9261,"byte_end":9270,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11658,"byte_end":11667,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11827,"byte_end":11836,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12595,"byte_end":12609,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":13127,"byte_end":13141,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14065,"byte_end":14077,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14805,"byte_end":14817,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14982,"byte_end":14994,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15429,"byte_end":15441,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15716,"byte_end":15726,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15958,"byte_end":15968,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":17975,"byte_end":17980,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":18662,"byte_end":18669,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":19520,"byte_end":19527,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24156,"byte_end":24165,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28066,"byte_end":28080,"line_start":190,"line_end":190,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":33866,"byte_end":33888,"line_start":367,"line_end":367,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":34098,"byte_end":34120,"line_start":374,"line_end":374,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":35771,"byte_end":35780,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":35999,"byte_end":36013,"line_start":431,"line_end":431,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":37366,"byte_end":37379,"line_start":479,"line_end":479,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":42610,"byte_end":42615,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":43962,"byte_end":43967,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":48735,"byte_end":48740,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":48886,"byte_end":48891,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":349},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/outside_tag.rs","byte_start":91913,"byte_end":91923,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_processing_instruction.rs","byte_start":97678,"byte_end":97688,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_declaration.rs","byte_start":101858,"byte_end":101868,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_doctype.rs","byte_start":108946,"byte_end":108956,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_opening_tag.rs","byte_start":109428,"byte_end":109438,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_closing_tag_name.rs","byte_start":115270,"byte_end":115280,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_comment.rs","byte_start":116845,"byte_end":116855,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_cdata.rs","byte_start":117860,"byte_end":117870,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_reference.rs","byte_start":118790,"byte_end":118800,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":73660,"byte_end":73670,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":74849,"byte_end":74859,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":76336,"byte_end":76346,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":77473,"byte_end":77483,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":125696,"byte_end":125708,"line_start":80,"line_end":80,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":127907,"byte_end":127919,"line_start":150,"line_end":150,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":132506,"byte_end":132514,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":134138,"byte_end":134146,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137627,"byte_end":137632,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137770,"byte_end":137775,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137852,"byte_end":137857,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":138350,"byte_end":138355,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":138460,"byte_end":138465,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":138710,"byte_end":138715,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":139112,"byte_end":139117,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":139280,"byte_end":139289,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":139661,"byte_end":139670,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":140210,"byte_end":140219,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38315,"byte_end":38326,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39618,"byte_end":39629,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39832,"byte_end":39843,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40352,"byte_end":40358,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40678,"byte_end":40684,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":41119,"byte_end":41130,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145254,"byte_end":145266,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145376,"byte_end":145388,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145742,"byte_end":145754,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":146895,"byte_end":146902,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":147395,"byte_end":147402,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":161667,"byte_end":161680,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163312,"byte_end":163325,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":166935,"byte_end":166943,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168735,"byte_end":168743,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168952,"byte_end":168969,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":169565,"byte_end":169573,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":169865,"byte_end":169884,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":172013,"byte_end":172021,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140921,"byte_end":140932,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172469,"byte_end":172482,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172600,"byte_end":172613,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172721,"byte_end":172734,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":315,"byte_end":321,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":331,"byte_end":335,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":345,"byte_end":354,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":364,"byte_end":370,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":380,"byte_end":386,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":396,"byte_end":405,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":415,"byte_end":421,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":252}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/lib.rs","byte_start":431,"byte_end":437,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":671}},{"kind":"Mod","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140723,"byte_end":140729,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":779}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":3653,"byte_end":3657,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4010,"byte_end":4014,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4155,"byte_end":4159,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":4484,"byte_end":4488,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":6703,"byte_end":6714,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":43},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7419,"byte_end":7428,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":7563,"byte_end":7572,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":9148,"byte_end":9157,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/name.rs","byte_start":9261,"byte_end":9270,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":6657}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11658,"byte_end":11667,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":896},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":11827,"byte_end":11836,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":12595,"byte_end":12609,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/attribute.rs","byte_start":13127,"byte_end":13141,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14065,"byte_end":14077,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14805,"byte_end":14817,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":14982,"byte_end":14994,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15429,"byte_end":15441,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15716,"byte_end":15726,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/common.rs","byte_start":15958,"byte_end":15968,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":945},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":17975,"byte_end":17980,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":18662,"byte_end":18669,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/escape.rs","byte_start":19520,"byte_end":19527,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":3817}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":24156,"byte_end":24165,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":28066,"byte_end":28080,"line_start":190,"line_end":190,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":33866,"byte_end":33888,"line_start":367,"line_end":367,"column_start":10,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":34098,"byte_end":34120,"line_start":374,"line_end":374,"column_start":23,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":35771,"byte_end":35780,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":957},"to":{"krate":2,"index":3817}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":35999,"byte_end":36013,"line_start":431,"line_end":431,"column_start":37,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":3817}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/namespace.rs","byte_start":37366,"byte_end":37379,"line_start":479,"line_end":479,"column_start":41,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":3817}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":42610,"byte_end":42615,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":981},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":43962,"byte_end":43967,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":48735,"byte_end":48740,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/lexer.rs","byte_start":48886,"byte_end":48891,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/outside_tag.rs","byte_start":91913,"byte_end":91923,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_processing_instruction.rs","byte_start":97678,"byte_end":97688,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_declaration.rs","byte_start":101858,"byte_end":101868,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_doctype.rs","byte_start":108946,"byte_end":108956,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_opening_tag.rs","byte_start":109428,"byte_end":109438,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_closing_tag_name.rs","byte_start":115270,"byte_end":115280,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_comment.rs","byte_start":116845,"byte_end":116855,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_cdata.rs","byte_start":117860,"byte_end":117870,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/inside_reference.rs","byte_start":118790,"byte_end":118800,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":73660,"byte_end":73670,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":74849,"byte_end":74859,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":508},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":76336,"byte_end":76346,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/parser/mod.rs","byte_start":77473,"byte_end":77483,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":125696,"byte_end":125708,"line_start":80,"line_end":80,"column_start":6,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/config.rs","byte_start":127907,"byte_end":127919,"line_start":150,"line_end":150,"column_start":18,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":132506,"byte_end":132514,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1232},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/events.rs","byte_start":134138,"byte_end":134146,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137627,"byte_end":137632,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137770,"byte_end":137775,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1280},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":137852,"byte_end":137857,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":138350,"byte_end":138355,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1280},"to":{"krate":1,"index":1623}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":138460,"byte_end":138465,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":138710,"byte_end":138715,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":139112,"byte_end":139117,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":139280,"byte_end":139289,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":139661,"byte_end":139670,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/error.rs","byte_start":140210,"byte_end":140219,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":38315,"byte_end":38326,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39618,"byte_end":39629,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":635},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":39832,"byte_end":39843,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":3808}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40352,"byte_end":40358,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":40678,"byte_end":40684,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":655},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/reader/mod.rs","byte_start":41119,"byte_end":41130,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145254,"byte_end":145266,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145376,"byte_end":145388,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":145742,"byte_end":145754,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":1623}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":146895,"byte_end":146902,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/emitter.rs","byte_start":147395,"byte_end":147402,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":161667,"byte_end":161680,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/config.rs","byte_start":163312,"byte_end":163325,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1322},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":166935,"byte_end":166943,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168735,"byte_end":168743,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":168952,"byte_end":168969,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":169565,"byte_end":169573,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":169865,"byte_end":169884,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/events.rs","byte_start":172013,"byte_end":172021,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/writer/mod.rs","byte_start":140921,"byte_end":140932,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172469,"byte_end":172482,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1386},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172600,"byte_end":172613,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1386},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.8.0/src/util.rs","byte_start":172721,"byte_end":172734,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1386},"to":{"krate":2,"index":7484}}]}