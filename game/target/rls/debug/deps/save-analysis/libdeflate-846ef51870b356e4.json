{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20","program":"/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","deflate","/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=846ef51870b356e4","-C","extra-filename=-846ef51870b356e4","--out-dir","/home/victor/coding/rust/game/target/rls/debug/deps","-L","dependency=/home/victor/coding/rust/game/target/rls/debug/deps","--extern","adler32=/home/victor/coding/rust/game/target/rls/debug/deps/libadler32-5c921ddaac6a87c4.rmeta","--extern","byteorder=/home/victor/coding/rust/game/target/rls/debug/deps/libbyteorder-17553229e1c57d1d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/victor/coding/rust/game/target/rls/debug/deps/libdeflate-846ef51870b356e4.rmeta"},"prelude":{"crate_id":{"name":"deflate","disambiguator":[15357853394483708409,5484004389223218147]},"crate_root":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src","external_crates":[{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":15,"id":{"name":"adler32","disambiguator":[16771765232425908682,3231166921587129779]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[12103544467993796305,9583536575203022875]}}],"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":0,"byte_end":14941,"line_start":1,"line_end":495,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":3003,"byte_end":3021,"line_start":102,"line_end":102,"column_start":31,"column_end":49},"alias_span":null,"name":"CompressionOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":3023,"byte_end":3037,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"alias_span":null,"name":"SpecialOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":3039,"byte_end":3050,"line_start":102,"line_end":102,"column_start":67,"column_end":78},"alias_span":null,"name":"Compression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":3088,"byte_end":3100,"line_start":104,"line_end":104,"column_start":15,"column_end":27},"alias_span":null,"name":"MatchingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":3221,"byte_end":3235,"line_start":110,"line_end":110,"column_start":22,"column_end":36},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":656}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":3237,"byte_end":3248,"line_start":110,"line_end":110,"column_start":38,"column_end":49},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":656}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":0,"byte_end":14941,"line_start":1,"line_end":495,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":36},{"krate":0,"index":107},{"krate":0,"index":170},{"krate":0,"index":181},{"krate":0,"index":218},{"krate":0,"index":250},{"krate":0,"index":283},{"krate":0,"index":297},{"krate":0,"index":361},{"krate":0,"index":388},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":443},{"krate":0,"index":473},{"krate":0,"index":483},{"krate":0,"index":499},{"krate":0,"index":546},{"krate":0,"index":569},{"krate":0,"index":584},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":669}],"decl_id":null,"docs":" An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)\n compression algorightm in pure rust.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":671},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16369,"byte_end":16373,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Fast","qualname":"::compression_options::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Fast minimal compression (`CompressionOptions::fast()`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16436,"byte_end":16443,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Default","qualname":"::compression_options::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Default level (`CompressionOptions::default()`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16697,"byte_end":16701,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Best","qualname":"::compression_options::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Higher compression level (`CompressionOptions::high()`).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":670},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16286,"byte_end":16297,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"name":"Compression","qualname":"::compression_options::Compression","value":"Compression::{Fast, Default, Best}","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675}],"decl_id":null,"docs":" An enum describing the level of compression to be used by the encoder","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16979,"byte_end":16985,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Normal","qualname":"::compression_options::SpecialOptions::Normal","value":"SpecialOptions::Normal","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Compress normally.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":696},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":17045,"byte_end":17056,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"_ForceFixed","qualname":"::compression_options::SpecialOptions::_ForceFixed","value":"SpecialOptions::_ForceFixed","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Force fixed huffman tables. (Unimplemented!).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":698},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":17129,"byte_end":17141,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"_ForceStored","qualname":"::compression_options::SpecialOptions::_ForceStored","value":"SpecialOptions::_ForceStored","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":" Force stored (uncompressed) blocks only. (Unimplemented!).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":693},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16931,"byte_end":16945,"line_start":52,"line_end":52,"column_start":10,"column_end":24},"name":"SpecialOptions","qualname":"::compression_options::SpecialOptions","value":"SpecialOptions::{Normal, _ForceFixed, _ForceStored}","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698}],"decl_id":null,"docs":" Enum allowing some special options (not implemented yet)!\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":17707,"byte_end":17725,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"CompressionOptions","qualname":"::compression_options::CompressionOptions","value":"CompressionOptions { max_hash_checks, lazy_if_less_than, matching_type, special }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" A struct describing the options for a compressor or compression function.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":713},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":18163,"byte_end":18178,"line_start":87,"line_end":87,"column_start":9,"column_end":24},"name":"max_hash_checks","qualname":"::compression_options::CompressionOptions::max_hash_checks","value":"u16","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" The maximum number of checks to make in the hash table for matches.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":714},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":18782,"byte_end":18799,"line_start":101,"line_end":101,"column_start":9,"column_end":26},"name":"lazy_if_less_than","qualname":"::compression_options::CompressionOptions::lazy_if_less_than","value":"u16","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Only lazy match if we have a length less than this value.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":715},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":19424,"byte_end":19437,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"name":"matching_type","qualname":"::compression_options::CompressionOptions::matching_type","value":"lz77::MatchingType","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Whether to use lazy or greedy matching.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":716},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":19568,"byte_end":19575,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"special","qualname":"::compression_options::CompressionOptions::special","value":"compression_options::SpecialOptions","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Force fixed/stored blocks (Not implemented yet).\n * Default value: `SpecialOptions::Normal`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":19872,"byte_end":19876,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"high","qualname":"<CompressionOptions>::high","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns compression settings rouhgly corresponding to the `HIGH(9)` setting in miniz.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":20511,"byte_end":20515,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"fast","qualname":"<CompressionOptions>::fast","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns  a fast set of compression settings","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":21076,"byte_end":21088,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"huffman_only","qualname":"<CompressionOptions>::huffman_only","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor only compress using\n huffman coding. (Ignoring any length/distance matching)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":21767,"byte_end":21770,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"rle","qualname":"<CompressionOptions>::rle","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor compress only using\n run-length encoding (i.e only looking for matches one byte back).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":746},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":49299,"byte_end":49305,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Greedy","qualname":"::lz77::MatchingType::Greedy","value":"MatchingType::Greedy","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":" Use greedy matching: the matching algorithm simply uses a match right away\n if found.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":49623,"byte_end":49627,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Lazy","qualname":"::lz77::MatchingType::Lazy","value":"MatchingType::Lazy","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":" Use lazy matching: after finding a match, the next input byte is checked, to see\n if there is a better match starting at that byte.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":745},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":49179,"byte_end":49191,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"MatchingType","qualname":"::lz77::MatchingType","value":"MatchingType::{Greedy, Lazy}","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":748}],"decl_id":null,"docs":" An enum describing whether we use lazy or greedy matching.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":227816,"byte_end":227830,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::writer::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":607}],"decl_id":null,"docs":" A DEFLATE encoder/compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":227998,"byte_end":228001,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"fn <O> (writer: W, options: O) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder using the provided compression options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":228349,"byte_end":228355,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `DeflateEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":228771,"byte_end":228776,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"fn (&mut self, w: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":231160,"byte_end":231171,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::writer::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":" A Zlib encoder/compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":231398,"byte_end":231401,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"fn <O> (writer: W, options: O) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZlibEncoder` using the provided compression options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":232146,"byte_end":232152,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `ZlibEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":232568,"byte_end":232573,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"fn (&mut self, writer: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":233475,"byte_end":233483,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"checksum","qualname":"<ZlibEncoder<W>>::checksum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the adler32 checksum of the currently consumed data.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":656},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":3192,"byte_end":3197,"line_start":109,"line_end":109,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":657}],"decl_id":null,"docs":" Encoders implementing a `Write` interface.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":663},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":4237,"byte_end":4255,"line_start":143,"line_end":143,"column_start":8,"column_end":26},"name":"deflate_bytes_conf","qualname":"::deflate_bytes_conf","value":"fn <O> (input: &[u8], options: O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":4908,"byte_end":4921,"line_start":168,"line_end":168,"column_start":8,"column_end":21},"name":"deflate_bytes","qualname":"::deflate_bytes","value":"fn (input: &[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression using the default compression\n level.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":666},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":5461,"byte_end":5484,"line_start":187,"line_end":187,"column_start":8,"column_end":31},"name":"deflate_bytes_zlib_conf","qualname":"::deflate_bytes_zlib_conf","value":"fn <O> (input: &[u8], options: O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lib.rs","byte_start":6606,"byte_end":6624,"line_start":222,"line_end":222,"column_start":8,"column_end":26},"name":"deflate_bytes_zlib","qualname":"::deflate_bytes_zlib","value":"fn (input: &[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,\n using the default compression level.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16723,"byte_end":16734,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":17163,"byte_end":17177,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":19746,"byte_end":19764,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":22020,"byte_end":22038,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":22212,"byte_end":22230,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/huffman_table.rs","byte_start":36975,"byte_end":36986,"line_start":1333,"line_end":1333,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/huffman_table.rs","byte_start":37205,"byte_end":37216,"line_start":1344,"line_end":1344,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/huffman_table.rs","byte_start":40020,"byte_end":40032,"line_start":1425,"line_end":1425,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":49654,"byte_end":49666,"line_start":40,"line_end":40,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":51190,"byte_end":51199,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":54175,"byte_end":54185,"line_start":176,"line_end":176,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lzvalue.rs","byte_start":96316,"byte_end":96328,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lzvalue.rs","byte_start":97099,"byte_end":97106,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/chained_hash_table.rs","byte_start":99445,"byte_end":99451,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/chained_hash_table.rs","byte_start":99608,"byte_end":99614,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/chained_hash_table.rs","byte_start":101130,"byte_end":101146,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/length_encode.rs","byte_start":110884,"byte_end":110897,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/output_writer.rs","byte_start":146359,"byte_end":146372,"line_start":34,"line_end":34,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":170823,"byte_end":170833,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":170925,"byte_end":170935,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":171332,"byte_end":171347,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":171502,"byte_end":171517,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/bitstream.rs","byte_start":174785,"byte_end":174794,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/bitstream.rs","byte_start":176248,"byte_end":176257,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/encoder_state.rs","byte_start":180024,"byte_end":180036,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/input_buffer.rs","byte_start":199201,"byte_end":199212,"line_start":15,"line_end":15,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/deflate_state.rs","byte_start":204434,"byte_end":204446,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/deflate_state.rs","byte_start":205042,"byte_end":205055,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/deflate_state.rs","byte_start":206574,"byte_end":206586,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":227897,"byte_end":227911,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":229131,"byte_end":229145,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":229729,"byte_end":229743,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":231295,"byte_end":231306,"line_start":192,"line_end":192,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":233575,"byte_end":233586,"line_start":254,"line_end":254,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":234584,"byte_end":234595,"line_start":280,"line_end":280,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":16723,"byte_end":16734,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":17163,"byte_end":17177,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":19746,"byte_end":19764,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":22020,"byte_end":22038,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/compression_options.rs","byte_start":22212,"byte_end":22230,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/huffman_table.rs","byte_start":36975,"byte_end":36986,"line_start":1333,"line_end":1333,"column_start":21,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":737},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/huffman_table.rs","byte_start":37205,"byte_end":37216,"line_start":1344,"line_end":1344,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/huffman_table.rs","byte_start":40020,"byte_end":40032,"line_start":1425,"line_end":1425,"column_start":6,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":49654,"byte_end":49666,"line_start":40,"line_end":40,"column_start":23,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":51190,"byte_end":51199,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lz77.rs","byte_start":54175,"byte_end":54185,"line_start":176,"line_end":176,"column_start":6,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lzvalue.rs","byte_start":96316,"byte_end":96328,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/lzvalue.rs","byte_start":97099,"byte_end":97106,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/chained_hash_table.rs","byte_start":99445,"byte_end":99451,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/chained_hash_table.rs","byte_start":99608,"byte_end":99614,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/chained_hash_table.rs","byte_start":101130,"byte_end":101146,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/length_encode.rs","byte_start":110884,"byte_end":110897,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/output_writer.rs","byte_start":146359,"byte_end":146372,"line_start":34,"line_end":34,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":170823,"byte_end":170833,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":170925,"byte_end":170935,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":394},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":171332,"byte_end":171347,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/checksum.rs","byte_start":171502,"byte_end":171517,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":406},"to":{"krate":0,"index":390}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/bitstream.rs","byte_start":174785,"byte_end":174794,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/bitstream.rs","byte_start":176248,"byte_end":176257,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/encoder_state.rs","byte_start":180024,"byte_end":180036,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/input_buffer.rs","byte_start":199201,"byte_end":199212,"line_start":15,"line_end":15,"column_start":6,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/deflate_state.rs","byte_start":204434,"byte_end":204446,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/deflate_state.rs","byte_start":205042,"byte_end":205055,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/deflate_state.rs","byte_start":206574,"byte_end":206586,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":227897,"byte_end":227911,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":229131,"byte_end":229145,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":229729,"byte_end":229743,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":231295,"byte_end":231306,"line_start":192,"line_end":192,"column_start":16,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":233575,"byte_end":233586,"line_start":254,"line_end":254,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":622},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.7.20/src/writer.rs","byte_start":234584,"byte_end":234595,"line_start":280,"line_end":280,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":1725}}]}