{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0","program":"/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","event_loop","/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e505d2da209e128a","-C","extra-filename=-e505d2da209e128a","--out-dir","/home/victor/coding/rust/game/target/rls/debug/deps","-L","dependency=/home/victor/coding/rust/game/target/rls/debug/deps","--extern","input=/home/victor/coding/rust/game/target/rls/debug/deps/libinput-f2d32bf3e873dc9e.rmeta","--extern","window=/home/victor/coding/rust/game/target/rls/debug/deps/libwindow-61ec44a503d49882.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/victor/coding/rust/game/target/rls/debug/deps/libevent_loop-e505d2da209e128a.rmeta"},"prelude":{"crate_id":{"name":"event_loop","disambiguator":[17010130293819623268,5583319498079492061]},"crate_root":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src","external_crates":[{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":15,"id":{"name":"window","disambiguator":[10644389130073107588,18045276469512688191]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":16,"id":{"name":"graphics_api_version","disambiguator":[13841328701140929715,5640819069176751652]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":17,"id":{"name":"input","disambiguator":[7877770970026603337,18371136413494895667]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[17215305307943534339,17386179787251686105]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":19,"id":{"name":"serde_derive","disambiguator":[3395802976844451380,10191292105346138767]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[15025683417156757502,5502632033422770241]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":21,"id":{"name":"viewport","disambiguator":[11992426241601430343,5130015623459904336]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","num":22,"id":{"name":"float","disambiguator":[2650214191000170641,4401102591703803147]}}],"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":0,"byte_end":19198,"line_start":1,"line_end":495,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":0,"byte_end":19198,"line_start":1,"line_end":495,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":61},{"krate":0,"index":74},{"krate":0,"index":72},{"krate":0,"index":70},{"krate":0,"index":68},{"krate":0,"index":66},{"krate":0,"index":75},{"krate":0,"index":91},{"krate":0,"index":89},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":103},{"krate":0,"index":101},{"krate":0,"index":99},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":104},{"krate":0,"index":115},{"krate":0,"index":113},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":55},{"krate":0,"index":58}],"decl_id":null,"docs":" A Piston event loop for games and interactive applications\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":64,"byte_end":86,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":87,"byte_end":125,"line_start":4,"line_end":4,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":666,"byte_end":679,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"EventSettings","qualname":"::EventSettings","value":"EventSettings { max_fps, ups, ups_reset, swap_buffers, bench_mode, lazy }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" Stores event loop settings.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":93},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":910,"byte_end":917,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"max_fps","qualname":"::EventSettings::max_fps","value":"u64","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The maximum number of frames per second","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":94},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"ups","qualname":"::EventSettings::ups","value":"u64","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The number of updates per second","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":95},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1298,"byte_end":1307,"line_start":48,"line_end":48,"column_start":9,"column_end":18},"name":"ups_reset","qualname":"::EventSettings::ups_reset","value":"u64","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The number of delayed updates before skipping them to catch up.\n When set to `0`, it will always try to catch up.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":96},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1379,"byte_end":1391,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"name":"swap_buffers","qualname":"::EventSettings::swap_buffers","value":"bool","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Enable or disable automatic swapping of buffers.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":97},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1648,"byte_end":1658,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"name":"bench_mode","qualname":"::EventSettings::bench_mode","value":"bool","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Enable or disable benchmark mode.\n When enabled, it will render and update without sleep and ignore input.\n Used to test performance by playing through as fast as possible.\n Requires `lazy` to be set to `false`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":98},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1796,"byte_end":1800,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"lazy","qualname":"::EventSettings::lazy","value":"bool","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Enable or disable rendering only when receiving input.\n When enabled, update and idle events are disabled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1886,"byte_end":1889,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<EventSettings>::new","value":"fn () -> EventSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates new with default settings.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":2552,"byte_end":2558,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"Events","qualname":"::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" An event loop iterator","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":33},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":3094,"byte_end":3105,"line_start":111,"line_end":111,"column_start":11,"column_end":22},"name":"DEFAULT_UPS","qualname":"::DEFAULT_UPS","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default updates per second.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":34},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":3167,"byte_end":3184,"line_start":113,"line_end":113,"column_start":11,"column_end":28},"name":"DEFAULT_UPS_RESET","qualname":"::DEFAULT_UPS_RESET","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default delayed updates reset.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":35},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":3248,"byte_end":3263,"line_start":115,"line_end":115,"column_start":11,"column_end":26},"name":"DEFAULT_MAX_FPS","qualname":"::DEFAULT_MAX_FPS","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default maximum frames per second.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":3373,"byte_end":3376,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<Events>::new","value":"fn (settings: EventSettings) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Creates a new event iterator with default UPS and FPS settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":4025,"byte_end":4029,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"next","qualname":"<Events>::next","value":"fn <W> (&mut self, window: &mut W) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next event.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":14705,"byte_end":14714,"line_start":371,"line_end":371,"column_start":11,"column_end":20},"name":"EventLoop","qualname":"::EventLoop","value":"EventLoop: Sized","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":" Methods implemented for changing event loop settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":14768,"byte_end":14786,"line_start":373,"line_end":373,"column_start":8,"column_end":26},"name":"get_event_settings","qualname":"::EventLoop::get_event_settings","value":"fn (&self) -> EventSettings","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Returns event loop settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":14853,"byte_end":14871,"line_start":375,"line_end":375,"column_start":8,"column_end":26},"name":"set_event_settings","qualname":"::EventLoop::set_event_settings","value":"fn (&mut self, settings: EventSettings) -> ()","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Sets event loop settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":15136,"byte_end":15143,"line_start":382,"line_end":382,"column_start":8,"column_end":15},"name":"set_ups","qualname":"::EventLoop::set_ups","value":"fn (&mut self, frames: u64) -> ()","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The number of updates per second","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":15537,"byte_end":15540,"line_start":392,"line_end":392,"column_start":8,"column_end":11},"name":"ups","qualname":"::EventLoop::ups","value":"fn (mut self, frames: u64) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The number of updates per second","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":15760,"byte_end":15773,"line_start":399,"line_end":399,"column_start":8,"column_end":21},"name":"set_ups_reset","qualname":"::EventLoop::set_ups_reset","value":"fn (&mut self, frames: u64) -> ()","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The number of delayed updates before skipping them to catch up.\n When set to `0`, it will always try to catch up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":16083,"byte_end":16092,"line_start":406,"line_end":406,"column_start":8,"column_end":17},"name":"ups_reset","qualname":"::EventLoop::ups_reset","value":"fn (mut self, frames: u64) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The number of delayed updates before skipping them to catch up.\n When set to `0`, it will always try to catch up.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":16409,"byte_end":16420,"line_start":416,"line_end":416,"column_start":8,"column_end":19},"name":"set_max_fps","qualname":"::EventLoop::set_max_fps","value":"fn (&mut self, frames: u64) -> ()","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The maximum number of frames per second","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":16818,"byte_end":16825,"line_start":426,"line_end":426,"column_start":8,"column_end":15},"name":"max_fps","qualname":"::EventLoop::max_fps","value":"fn (mut self, frames: u64) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The maximum number of frames per second","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":16977,"byte_end":16993,"line_start":432,"line_end":432,"column_start":8,"column_end":24},"name":"set_swap_buffers","qualname":"::EventLoop::set_swap_buffers","value":"fn (&mut self, enable: bool) -> ()","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Enable or disable automatic swapping of buffers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":17234,"byte_end":17246,"line_start":438,"line_end":438,"column_start":8,"column_end":20},"name":"swap_buffers","qualname":"::EventLoop::swap_buffers","value":"fn (mut self, enable: bool) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Enable or disable automatic swapping of buffers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":17588,"byte_end":17602,"line_start":447,"line_end":447,"column_start":8,"column_end":22},"name":"set_bench_mode","qualname":"::EventLoop::set_bench_mode","value":"fn (&mut self, enable: bool) -> ()","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Enable or disable benchmark mode.\n When enabled, it will render and update without sleep and ignore input.\n Used to test performance by playing through as fast as possible.\n Requires `lazy` to be set to `false`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":18025,"byte_end":18035,"line_start":456,"line_end":456,"column_start":8,"column_end":18},"name":"bench_mode","qualname":"::EventLoop::bench_mode","value":"fn (mut self, enable: bool) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Enable or disable benchmark mode.\n When enabled, it will render and update without sleep and ignore input.\n Used to test performance by playing through as fast as possible.\n Requires `lazy` to be set to `false`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":18302,"byte_end":18310,"line_start":464,"line_end":464,"column_start":8,"column_end":16},"name":"set_lazy","qualname":"::EventLoop::set_lazy","value":"fn (&mut self, enable: bool) -> ()","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Enable or disable rendering only when receiving input.\n When enabled, update events are disabled.\n Idle events are emitted while receiving input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":18654,"byte_end":18658,"line_start":472,"line_end":472,"column_start":8,"column_end":12},"name":"lazy","qualname":"::EventLoop::lazy","value":"fn (mut self, enable: bool) -> Self","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Enable or disable rendering only when receiving input.\n When enabled, update events are disabled.\n Idle events are emitted while receiving input.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1816,"byte_end":1829,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":2169,"byte_end":2182,"line_start":75,"line_end":75,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":3281,"byte_end":3287,"line_start":117,"line_end":117,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":18765,"byte_end":18778,"line_start":478,"line_end":478,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":18953,"byte_end":18959,"line_start":487,"line_end":487,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":1816,"byte_end":1829,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":2169,"byte_end":2182,"line_start":75,"line_end":75,"column_start":18,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":3281,"byte_end":3287,"line_start":117,"line_end":117,"column_start":6,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":14716,"byte_end":14721,"line_start":371,"line_end":371,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":18765,"byte_end":18778,"line_start":478,"line_end":478,"column_start":20,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/pistoncore-event_loop-0.49.0/src/lib.rs","byte_start":18953,"byte_end":18959,"line_start":487,"line_end":487,"column_start":20,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":104},"to":{"krate":0,"index":40}}]}