{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2","program":"/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","approx","/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1f7a94446a89e151","-C","extra-filename=-1f7a94446a89e151","--out-dir","/home/victor/coding/rust/game/target/rls/debug/deps","-L","dependency=/home/victor/coding/rust/game/target/rls/debug/deps","--extern","num_traits=/home/victor/coding/rust/game/target/rls/debug/deps/libnum_traits-367d1f9e296df8f1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/victor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/victor/coding/rust/game/target/rls/debug/deps/libapprox-1f7a94446a89e151.rmeta"},"prelude":{"crate_id":{"name":"approx","disambiguator":[12217813018336039865,14093056112022610112]},"crate_root":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src","external_crates":[{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":4,"id":{"name":"num_traits","disambiguator":[10720715582030918019,14458945159501303801]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}}],"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":597,"byte_end":11440,"line_start":15,"line_end":384,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6041,"byte_end":6050,"line_start":172,"line_end":172,"column_start":22,"column_end":31},"alias_span":null,"name":"AbsDiffEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6073,"byte_end":6083,"line_start":173,"line_end":173,"column_start":22,"column_end":32},"alias_span":null,"name":"RelativeEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6102,"byte_end":6108,"line_start":174,"line_end":174,"column_start":18,"column_end":24},"alias_span":null,"name":"UlpsEq","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":597,"byte_end":11440,"line_start":15,"line_end":384,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":58},{"krate":0,"index":95},{"krate":0,"index":131},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":162},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":178},{"krate":0,"index":183},{"krate":0,"index":187}],"decl_id":null,"docs":" A crate that provides facilities for testing the approximate equality of floating-point\n based types, using either relative difference, or units in the last place (ULPs)\n comparisons.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":5818,"byte_end":5824,"line_start":157,"line_end":157,"column_start":35,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11676,"byte_end":11685,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AbsDiffEq","qualname":"::abs_diff_eq::AbsDiffEq","value":"AbsDiffEq<Rhs = Self>: PartialEq<Rhs>","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" Equality that is defined using the absolute difference of two numbers.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11798,"byte_end":11805,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"Epsilon","qualname":"::abs_diff_eq::AbsDiffEq::Epsilon","value":"type Epsilon;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Used for specifying relative comparisons.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12031,"byte_end":12046,"line_start":19,"line_end":19,"column_start":8,"column_end":23},"name":"default_epsilon","qualname":"::abs_diff_eq::AbsDiffEq::default_epsilon","value":"fn () -> Self::Epsilon","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" The default tolerance to use when testing values that are close together.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12197,"byte_end":12208,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"abs_diff_eq","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_eq","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon) -> bool","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" A test for equality that uses the absolute difference to compute the approximate\n equality of two numbers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":12318,"byte_end":12329,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"abs_diff_ne","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_ne","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon) -> bool","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::abs_diff_eq`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":65},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16839,"byte_end":16849,"line_start":11,"line_end":11,"column_start":11,"column_end":21},"name":"RelativeEq","qualname":"::relative_eq::RelativeEq","value":"RelativeEq<Rhs = Self>: AbsDiffEq<Rhs>","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and\n relative based comparisons.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17086,"byte_end":17106,"line_start":18,"line_end":18,"column_start":8,"column_end":28},"name":"default_max_relative","qualname":"::relative_eq::RelativeEq::default_max_relative","value":"fn () -> Self::Epsilon","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" The default relative tolerance for testing values that are far-apart.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17224,"byte_end":17235,"line_start":21,"line_end":21,"column_start":8,"column_end":19},"name":"relative_eq","qualname":"::relative_eq::RelativeEq::relative_eq","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" A test for equality that uses a relative comparison if the values are far apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":17413,"byte_end":17424,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"relative_ne","qualname":"::relative_eq::RelativeEq::relative_ne","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::relative_eq`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22405,"byte_end":22411,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"UlpsEq","qualname":"::ulps_eq::UlpsEq","value":"UlpsEq<Rhs = Self>: AbsDiffEq<Rhs>","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and ULPs\n (Units in Last Place) based comparisons.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22639,"byte_end":22655,"line_start":18,"line_end":18,"column_start":8,"column_end":24},"name":"default_max_ulps","qualname":"::ulps_eq::UlpsEq::default_max_ulps","value":"fn () -> u32","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" The default ULPs to tolerate when testing values that are far-apart.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22771,"byte_end":22778,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"ulps_eq","qualname":"::ulps_eq::UlpsEq::ulps_eq","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_ulps: u32) -> bool","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" A test for equality that uses units in the last place (ULP) if the values are far apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22899,"byte_end":22906,"line_start":24,"line_end":24,"column_start":8,"column_end":15},"name":"ulps_ne","qualname":"::ulps_eq::UlpsEq::ulps_ne","value":"fn (&self, other: &Rhs, epsilon: Self::Epsilon, max_ulps: u32) -> bool","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::ulps_eq`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6549,"byte_end":6556,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"AbsDiff","qualname":"::AbsDiff","value":"AbsDiff { epsilon }","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n absolute difference based comparison.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6702,"byte_end":6709,"line_start":197,"line_end":197,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::AbsDiff::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7107,"byte_end":7114,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<AbsDiff<A, B>>::epsilon","value":"fn (self, epsilon: A::Epsilon) -> AbsDiff<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7086,"byte_end":7095,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7268,"byte_end":7270,"line_start":226,"line_end":226,"column_start":12,"column_end":14},"name":"eq","qualname":"<AbsDiff<A, B>>::eq","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7247,"byte_end":7256,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7425,"byte_end":7427,"line_start":232,"line_end":232,"column_start":12,"column_end":14},"name":"ne","qualname":"<AbsDiff<A, B>>::ne","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":7404,"byte_end":7413,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8166,"byte_end":8174,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"Relative","qualname":"::Relative","value":"Relative { epsilon, max_relative }","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n relative based comparison.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":165},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8321,"byte_end":8328,"line_start":261,"line_end":261,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Relative::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":166},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8420,"byte_end":8432,"line_start":263,"line_end":263,"column_start":9,"column_end":21},"name":"max_relative","qualname":"::Relative::max_relative","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" The relative tolerance for testing values that are far-apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8889,"byte_end":8896,"line_start":287,"line_end":287,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Relative<A, B>>::epsilon","value":"fn (self, epsilon: A::Epsilon) -> Relative<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8868,"byte_end":8877,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9080,"byte_end":9092,"line_start":293,"line_end":293,"column_start":12,"column_end":24},"name":"max_relative","qualname":"<Relative<A, B>>::max_relative","value":"fn (self, max_relative: A::Epsilon) -> Relative<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the maximum relative value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9059,"byte_end":9068,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9290,"byte_end":9292,"line_start":302,"line_end":302,"column_start":12,"column_end":14},"name":"eq","qualname":"<Relative<A, B>>::eq","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9269,"byte_end":9278,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9466,"byte_end":9468,"line_start":308,"line_end":308,"column_start":12,"column_end":14},"name":"ne","qualname":"<Relative<A, B>>::ne","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":9445,"byte_end":9454,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10173,"byte_end":10177,"line_start":331,"line_end":331,"column_start":12,"column_end":16},"name":"Ulps","qualname":"::Ulps","value":"Ulps { epsilon, max_ulps }","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using an ULPs\n based comparison.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":181},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10320,"byte_end":10327,"line_start":337,"line_end":337,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Ulps::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":182},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10418,"byte_end":10426,"line_start":339,"line_end":339,"column_start":9,"column_end":17},"name":"max_ulps","qualname":"::Ulps::max_ulps","value":"u32","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The ULPs to tolerate when testing values that are far-apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10844,"byte_end":10851,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Ulps<A, B>>::epsilon","value":"fn (self, epsilon: A::Epsilon) -> Ulps<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10823,"byte_end":10832,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11019,"byte_end":11027,"line_start":369,"line_end":369,"column_start":12,"column_end":20},"name":"max_ulps","qualname":"<Ulps<A, B>>::max_ulps","value":"fn (self, max_ulps: u32) -> Ulps<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the max ulps value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10998,"byte_end":11007,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11170,"byte_end":11172,"line_start":375,"line_end":375,"column_start":12,"column_end":14},"name":"eq","qualname":"<Ulps<A, B>>::eq","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11149,"byte_end":11158,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11338,"byte_end":11340,"line_start":381,"line_end":381,"column_start":12,"column_end":14},"name":"ne","qualname":"<Ulps<A, B>>::ne","value":"fn (self, lhs: &A, rhs: &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":11317,"byte_end":11326,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15002,"byte_end":15006,"line_start":121,"line_end":121,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15345,"byte_end":15352,"line_start":135,"line_end":135,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20305,"byte_end":20309,"line_start":124,"line_end":124,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20707,"byte_end":20714,"line_start":141,"line_end":141,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25254,"byte_end":25258,"line_start":96,"line_end":96,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25571,"byte_end":25578,"line_start":108,"line_end":108,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6749,"byte_end":6756,"line_start":200,"line_end":200,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6957,"byte_end":6964,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8472,"byte_end":8480,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8737,"byte_end":8745,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10459,"byte_end":10463,"line_start":342,"line_end":342,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10700,"byte_end":10704,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":11699,"byte_end":11708,"line_start":8,"line_end":8,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":2039},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15002,"byte_end":15006,"line_start":121,"line_end":121,"column_start":47,"column_end":51},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":2693},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/abs_diff_eq.rs","byte_start":15345,"byte_end":15352,"line_start":135,"line_end":135,"column_start":49,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":2750},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":16863,"byte_end":16872,"line_start":11,"line_end":11,"column_start":35,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":65}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20305,"byte_end":20309,"line_start":124,"line_end":124,"column_start":49,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":2693},"to":{"krate":0,"index":65}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/relative_eq.rs","byte_start":20707,"byte_end":20714,"line_start":141,"line_end":141,"column_start":51,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":2750},"to":{"krate":0,"index":65}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":22425,"byte_end":22434,"line_start":11,"line_end":11,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25254,"byte_end":25258,"line_start":96,"line_end":96,"column_start":41,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":2693},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/ulps_eq.rs","byte_start":25571,"byte_end":25578,"line_start":108,"line_end":108,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":1,"index":2750},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6749,"byte_end":6756,"line_start":200,"line_end":200,"column_start":24,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":148},"to":{"krate":1,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":6957,"byte_end":6964,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8472,"byte_end":8480,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":8737,"byte_end":8745,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10459,"byte_end":10463,"line_start":342,"line_end":342,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":178},"to":{"krate":1,"index":2204}},{"span":{"file_name":"/home/victor/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.2/src/lib.rs","byte_start":10700,"byte_end":10704,"line_start":356,"line_end":356,"column_start":12,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}}]}